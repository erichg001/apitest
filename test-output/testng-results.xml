<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="31" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="apitest" duration-ms="120178" started-at="2019-03-16T03:20:42Z" finished-at="2019-03-16T03:22:42Z">
    <groups>
    </groups>
    <test name="SAASTEST" duration-ms="107595" started-at="2019-03-16T03:20:42Z" finished-at="2019-03-16T03:22:29Z">
      <class name="com.bitnei.apitest.webtestcases.saas.SaasLogin">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="setUp" is-config="true" duration-ms="3799" started-at="2019-03-16T03:20:46Z" finished-at="2019-03-16T03:20:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="Login()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="Login" duration-ms="21859" started-at="2019-03-16T03:20:49Z" description="点击登录按钮跳转正确" finished-at="2019-03-16T03:21:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="afterTest" is-config="true" duration-ms="1088" started-at="2019-03-16T03:21:11Z" finished-at="2019-03-16T03:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="setUp" is-config="true" duration-ms="3355" started-at="2019-03-16T03:21:12Z" finished-at="2019-03-16T03:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="LoginFaild()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="LoginFaild" duration-ms="6545" started-at="2019-03-16T03:21:16Z" description="登录失败,用户名密码错误" finished-at="2019-03-16T03:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFaild -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="afterTest" is-config="true" duration-ms="921" started-at="2019-03-16T03:21:22Z" finished-at="2019-03-16T03:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="setUp" is-config="true" duration-ms="3368" started-at="2019-03-16T03:21:23Z" finished-at="2019-03-16T03:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="LoginNoName()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="LoginNoName" duration-ms="7252" started-at="2019-03-16T03:21:26Z" description="登录失败,请输入用户名" finished-at="2019-03-16T03:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginNoName -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="afterTest" is-config="true" duration-ms="811" started-at="2019-03-16T03:21:34Z" finished-at="2019-03-16T03:21:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="setUp" is-config="true" duration-ms="3485" started-at="2019-03-16T03:21:35Z" finished-at="2019-03-16T03:21:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="LoginNoPassWord()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="LoginNoPassWord" duration-ms="5959" started-at="2019-03-16T03:21:38Z" description="登录失败,请输入密码" finished-at="2019-03-16T03:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginNoPassWord -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="afterTest" is-config="true" duration-ms="912" started-at="2019-03-16T03:21:44Z" finished-at="2019-03-16T03:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="setUp" is-config="true" duration-ms="3497" started-at="2019-03-16T03:21:45Z" finished-at="2019-03-16T03:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="LoginSucsess()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="LoginSucsess" duration-ms="16101" started-at="2019-03-16T03:21:48Z" description="登录成功" finished-at="2019-03-16T03:22:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginSucsess -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.SaasLogin@7181ae3f]" name="afterTest" is-config="true" duration-ms="891" started-at="2019-03-16T03:22:05Z" finished-at="2019-03-16T03:22:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.bitnei.apitest.webtestcases.saas.SaasLogin -->
      <class name="com.bitnei.apitest.webtestcases.saas.UserManage">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="setUp" is-config="true" duration-ms="3365" started-at="2019-03-16T03:22:05Z" finished-at="2019-03-16T03:22:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="LoginToUser()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="LoginToUser" duration-ms="18104" started-at="2019-03-16T03:22:09Z" description="登录成功,跳转页面用户管理页面成功" finished-at="2019-03-16T03:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginToUser -->
        <test-method status="PASS" signature="UserOpen()[pri:1, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="UserOpen" duration-ms="163" started-at="2019-03-16T03:22:27Z" description="登录成功,用户管理页面展示高级查询成功" finished-at="2019-03-16T03:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserOpen -->
        <test-method status="PASS" signature="UserQueryByEmail()[pri:2, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="UserQueryByEmail" duration-ms="407" started-at="2019-03-16T03:22:28Z" description="登录成功,用户管理页面按邮箱查询成功" finished-at="2019-03-16T03:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserQueryByEmail -->
        <test-method status="PASS" signature="UserDetail()[pri:3, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="UserDetail" duration-ms="207" started-at="2019-03-16T03:22:28Z" description="登录成功,用户管理页面用户详情查看成功" finished-at="2019-03-16T03:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserDetail -->
        <test-method status="PASS" signature="GourpQuery()[pri:4, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="GourpQuery" duration-ms="149" started-at="2019-03-16T03:22:28Z" description="登录成功,分组管理查看" finished-at="2019-03-16T03:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GourpQuery -->
        <test-method status="PASS" signature="PermissionQuery()[pri:5, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="PermissionQuery" duration-ms="203" started-at="2019-03-16T03:22:28Z" description="登录成功,权限管理查看" finished-at="2019-03-16T03:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PermissionQuery -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bitnei.apitest.webtestcases.saas.UserManage@46238e3f]" name="afterTest" is-config="true" duration-ms="861" started-at="2019-03-16T03:22:29Z" finished-at="2019-03-16T03:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.bitnei.apitest.webtestcases.saas.UserManage -->
      <class name="com.bitnei.apitest.testcases.bidash.SchemeAdd">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.bidash.SchemeAdd@77a57272]" name="setUp" is-config="true" duration-ms="996" started-at="2019-03-16T03:20:42Z" finished-at="2019-03-16T03:20:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://bdp-app.bitnei.cn:7789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="SchemeAddData(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.bidash.SchemeAdd@77a57272]" name="SchemeAddData" duration-ms="2656" started-at="2019-03-16T03:20:43Z" description="配置后台新增方案" data-provider="dataprovider1" finished-at="2019-03-16T03:20:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":null,"error":false}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [{}] but found [{"status":{"currentValue is ":500,"expectedValue is":200},"error":{"currentValue is ":true,"expectedValue is":false}}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":500,"expectedValue is":200},"error":{"currentValue is ":true,"expectedValue is":false}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.bidash.SchemeAdd.SchemeAddData(SchemeAdd.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SchemeAddData -->
        <test-method status="PASS" signature="SchemeAddDataRep(java.lang.String)[pri:1, instance:com.bitnei.apitest.testcases.bidash.SchemeAdd@77a57272]" name="SchemeAddDataRep" duration-ms="219" started-at="2019-03-16T03:22:27Z" description="配置后台新增方案名称重复" data-provider="dataprovider2" finished-at="2019-03-16T03:22:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":500,"errorMsg":"该方案名称已经存在！！！","data":null,"error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SchemeAddDataRep -->
        <test-method status="FAIL" signature="SchemeDeleteData(java.lang.String)[pri:2, instance:com.bitnei.apitest.testcases.bidash.SchemeAdd@77a57272]" name="SchemeDeleteData" duration-ms="370" started-at="2019-03-16T03:22:27Z" description="配置后台删除方案" data-provider="dataprovider1" finished-at="2019-03-16T03:22:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":null,"error":false}]]>
              </value>
            </param>
          </params>
          <exception class="org.springframework.beans.factory.BeanDefinitionStoreException">
            <message>
              <![CDATA[Unexpected exception parsing XML document from class path resource [spring-mybatis.xml]; nested exception is java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [spring-mybatis.xml]; nested exception is java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal
at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:412)
at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:243)
at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)
at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)
at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)
at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:539)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:451)
at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
at com.bitnei.apitest.testcases.bidash.SchemeAdd.SchemeDeleteData(SchemeAdd.java:131)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal
at java.lang.ClassLoader.defineClass1(Native Method)
at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
at java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
at java.net.URLClassLoader.access$100(URLClassLoader.java:74)
at java.net.URLClassLoader$1.run(URLClassLoader.java:369)
at java.net.URLClassLoader$1.run(URLClassLoader.java:363)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:362)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
at org.apache.xerces.parsers.AbstractDOMParser.startDocument(Unknown Source)
at org.apache.xerces.impl.xs.XMLSchemaValidator.startDocument(Unknown Source)
at org.apache.xerces.impl.dtd.XMLDTDValidator.startDocument(Unknown Source)
at org.apache.xerces.impl.XMLDocumentScannerImpl.startEntity(Unknown Source)
at org.apache.xerces.impl.XMLVersionDetector.startDocumentParsing(Unknown Source)
at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
... 27 more
Caused by: java.lang.ClassNotFoundException: org.w3c.dom.ElementTraversal
at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 51 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanDefinitionStoreException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SchemeDeleteData -->
      </class> <!-- com.bitnei.apitest.testcases.bidash.SchemeAdd -->
    </test> <!-- SAASTEST -->
    <test name="OPENAPI" duration-ms="1765" started-at="2019-03-16T03:22:29Z" finished-at="2019-03-16T03:22:31Z">
      <class name="com.bitnei.apitest.testcases.openapi.ChargingData">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="setUp" is-config="true" duration-ms="0" started-at="2019-03-16T03:22:29Z" finished-at="2019-03-16T03:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://10.10.26.5:8082]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ChargingDataNo(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataNo" duration-ms="297" started-at="2019-03-16T03:22:29Z" description="查询珠海车辆充电数据缺少车牌号参数" data-provider="dataprovider14" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"Required String parameter 'licensePlate' is not present","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataNo -->
        <test-method status="PASS" signature="ChargingDataNoFrom(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataNoFrom" duration-ms="197" started-at="2019-03-16T03:22:30Z" description="查询珠海车辆充电数据缺少from参数" data-provider="dataprovider2" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 from  不符合规则：yyyy-MM-dd HH:mm:ss","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataNoFrom -->
        <test-method status="PASS" signature="ChargingDataNoTo(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataNoTo" duration-ms="41" started-at="2019-03-16T03:22:30Z" description="查询珠海车辆充电数据缺少to参数" data-provider="dataprovider3" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 to  不符合规则：yyyy-MM-dd HH:mm:ss","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataNoTo -->
        <test-method status="PASS" signature="ChargingDataNormal(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataNormal" duration-ms="343" started-at="2019-03-16T03:22:30Z" description="查询珠海车辆充电数据正常" data-provider="dataprovider1" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":[{"startElectricity":124.25,"endElectricity":150.5,"startTime":"2019-03-01 09:19:34","endTime":"2019-03-01 09:42:34"}],"error":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataNormal -->
        <test-method status="PASS" signature="ChargingDataUpOneDay(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataUpOneDay" duration-ms="47" started-at="2019-03-16T03:22:30Z" description="查询珠海车辆充电数据选择时间范围不得超过一个自然日" data-provider="dataprovider4" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"选择时间范围不得超过一个自然日","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataUpOneDay -->
        <test-method status="PASS" signature="ChargingDataWrongTime(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.ChargingData@120d6fe6]" name="ChargingDataWrongTime" duration-ms="41" started-at="2019-03-16T03:22:30Z" description="查询珠海车辆充电数据选择时间范围开始时间不能大于结束时间" data-provider="dataprovider5" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 from 2019-03-03 10:49:21 不能大于 to 2019-03-02 10:49:21","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChargingDataWrongTime -->
      </class> <!-- com.bitnei.apitest.testcases.openapi.ChargingData -->
      <class name="com.bitnei.apitest.testcases.openapi.RunningData">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.RunningData@3444d69d]" name="setUp" is-config="true" duration-ms="0" started-at="2019-03-16T03:22:31Z" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://10.10.26.5:8082]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="EnergyConservationInvalidtoken(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.RunningData@3444d69d]" name="EnergyConservationInvalidtoken" duration-ms="27" started-at="2019-03-16T03:22:31Z" description="车辆行驶数数据查询token无效" data-provider="dataprovider13" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":401,"errorMsg":"invalid_token: f829155c-9374-4673-a005-10ce548af1=>/external/1/zhuhai/api/runningData","data":null,"error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationInvalidtoken -->
        <test-method status="PASS" signature="EnergyConservationNolicensePlate(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.RunningData@3444d69d]" name="EnergyConservationNolicensePlate" duration-ms="43" started-at="2019-03-16T03:22:31Z" description="车辆行驶数数据查询车牌号为空" data-provider="dataprovider12" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 licensePlate  不能为空","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationNolicensePlate -->
        <test-method status="PASS" signature="EnergyConservationNormal(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.RunningData@3444d69d]" name="EnergyConservationNormal" duration-ms="487" started-at="2019-03-16T03:22:31Z" description="车辆行驶数据查询正常" data-provider="dataprovider10" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":[{"startSoc":93.0,"endSoc":87.0,"startLocation":"广东省珠海市金湾区","endLocation":"广东省珠海市金湾区","runTime":2520,"rumMileage":19.0,"startTime":"2019-03-01 12:06:26","endTime":"2019-03-01 12:48:26"},{"startSoc":87.0,"endSoc":81.0,"startLocation":"广东省珠海市金湾区","endLocation":"广东省珠海市金湾区","runTime":2610,"rumMileage":22.0,"startTime":"2019-03-01 13:08:19","endTime":"2019-03-01 13:51:49"}],"error":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationNormal -->
        <test-method status="PASS" signature="EnergyConservationUpScope(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.RunningData@3444d69d]" name="EnergyConservationUpScope" duration-ms="45" started-at="2019-03-16T03:22:31Z" description="车辆行驶数选择时间范围不得超过一个自然日" data-provider="dataprovider4" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"选择时间范围不得超过一个自然日","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationUpScope -->
      </class> <!-- com.bitnei.apitest.testcases.openapi.RunningData -->
      <class name="com.bitnei.apitest.testcases.openapi.EnergyConservation">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.EnergyConservation@4ba2ca36]" name="setUp" is-config="true" duration-ms="0" started-at="2019-03-16T03:22:30Z" finished-at="2019-03-16T03:22:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://10.10.26.5:8082]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="EnergyConservationNormal(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.EnergyConservation@4ba2ca36]" name="EnergyConservationNormal" duration-ms="50" started-at="2019-03-16T03:22:30Z" description="碳排放接口查询正常" data-provider="dataprovider6" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":0.5072,"error":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationNormal -->
        <test-method status="PASS" signature="EnergyConservationUpScope(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.EnergyConservation@4ba2ca36]" name="EnergyConservationUpScope" duration-ms="44" started-at="2019-03-16T03:22:31Z" description="碳排放接口时间超3个月" data-provider="dataprovider7" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"选择时间范围不得超过3个月","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationUpScope -->
        <test-method status="PASS" signature="EnergyConservationWrongDateFormat(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.EnergyConservation@4ba2ca36]" name="EnergyConservationWrongDateFormat" duration-ms="45" started-at="2019-03-16T03:22:31Z" description="碳排放接口开始时间不符合规则" data-provider="dataprovider9" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 from 2019.05.10 不符合规则：yyyy-MM-dd","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationWrongDateFormat -->
        <test-method status="PASS" signature="EnergyConservationWrongTime(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.openapi.EnergyConservation@4ba2ca36]" name="EnergyConservationWrongTime" duration-ms="40" started-at="2019-03-16T03:22:31Z" description="碳排放接口开始间大于结束时间" data-provider="dataprovider8" finished-at="2019-03-16T03:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":400,"errorMsg":"VALID","data":"参数 from 2019-05-10 不能大于 to 2019-04-13","error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnergyConservationWrongTime -->
      </class> <!-- com.bitnei.apitest.testcases.openapi.EnergyConservation -->
    </test> <!-- OPENAPI -->
    <test name="MONITER" duration-ms="10782" started-at="2019-03-16T03:22:31Z" finished-at="2019-03-16T03:22:42Z">
      <class name="com.bitnei.apitest.testcases.EvDetail">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.EvDetail@6e38921c]" name="setUp" is-config="true" duration-ms="180" started-at="2019-03-16T03:22:37Z" finished-at="2019-03-16T03:22:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://bdp-app.bitnei.cn:7788]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getVehCountPerMonitorPlatformStatus(java.lang.String)[pri:1, instance:com.bitnei.apitest.testcases.EvDetail@6e38921c]" name="getVehCountPerMonitorPlatformStatus" duration-ms="5020" started-at="2019-03-16T03:22:37Z" description="明细数据查询" data-provider="dataprovider1" finished-at="2019-03-16T03:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":{"data":[{"terminalTime":"2018-09-22 14:16:10","carStatus":"2","chargeStatus":"0","carMode":"1","speed":"0.0","totalOdometer":"32218.199219","totalVoltage":"0.0","totalCurrent":"0.0","soc":"0","dcStatus":"2","insulateResistance":"0"},{"terminaltime":"2018-09-22 14:16:00","carStatus":"2","chargeStatus":"0","carMode":"1","speed":"0.0","totalOdometer":"32218.199219","totalVoltage":"0.0","totalCurrent":"0.0","soc":"0","dcStatus":"2","insulateResistance":"0"}],"titles":["数据采集时间","车辆状态","充电状态","运行模式","车速(km/h)","里程(km)","总电压(V)","总电流(A)","SOC","DC-DC状态","绝缘电阻(kΩ)"],"page":{"pageSize":10,"pageNumber":1,"endIndex":2,"startIndex":0,"totalSize":2,"totalPage":1}},"error":false}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehCountPerMonitorPlatformStatus -->
      </class> <!-- com.bitnei.apitest.testcases.EvDetail -->
      <class name="com.bitnei.apitest.testcases.getVehCountPerMonitorPlatform">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.getVehCountPerMonitorPlatform@3d3fcdb0]" name="setUp" is-config="true" duration-ms="202" started-at="2019-03-16T03:22:34Z" finished-at="2019-03-16T03:22:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://bdp-app.bitnei.cn:7788]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="getVehCountPerMonitorPlatformStatus(java.lang.String)[pri:1, instance:com.bitnei.apitest.testcases.getVehCountPerMonitorPlatform@3d3fcdb0]" name="getVehCountPerMonitorPlatformStatus" duration-ms="2864" started-at="2019-03-16T03:22:34Z" description="获取实时车辆信息" data-provider="dataprovider2" finished-at="2019-03-16T03:22:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":[{"id":1,"monitorPlatform":"智云平台","num":274419},{"id":2,"monitorPlatform":"英泰斯特","num":14}],"error":false}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [{}] but found [{"num":{"currentValue is ":253274,"expectedValue is":274419}}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [{}] but found [{"num":{"currentValue is ":253274,"expectedValue is":274419}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.getVehCountPerMonitorPlatform.getVehCountPerMonitorPlatformStatus(getVehCountPerMonitorPlatform.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getVehCountPerMonitorPlatformStatus -->
      </class> <!-- com.bitnei.apitest.testcases.getVehCountPerMonitorPlatform -->
      <class name="com.bitnei.apitest.testcases.PostVehicles">
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.PostVehicles@641147d0]" name="setUp" is-config="true" duration-ms="405" started-at="2019-03-16T03:22:31Z" finished-at="2019-03-16T03:22:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://bdp-app.bitnei.cn:7788]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="postVehiclesForStatus(java.lang.String)[pri:0, instance:com.bitnei.apitest.testcases.PostVehicles@641147d0]" name="postVehiclesForStatus" duration-ms="2102" started-at="2019-03-16T03:22:32Z" description="获取车辆列表,判断返回200" data-provider="dataprovider1" finished-at="2019-03-16T03:22:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"status":200,"errorMsg":null,"data":{"total":2,"list":[{"id":"21","vin":"LS4AAB3C0GG700008"}]},"error":true}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postVehiclesForStatus -->
      </class> <!-- com.bitnei.apitest.testcases.PostVehicles -->
    </test> <!-- MONITER -->
  </suite> <!-- apitest -->
</testng-results>
