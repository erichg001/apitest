<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="DESKTOP-Q37MKND" name="com.bitnei.apitest.testcases.saas.ApiTest" tests="44" failures="32" timestamp="02 六月 2020 08:25:58 GMT" time="11.477" errors="0">
  <testcase name="ApiTestCode" time="0.054" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.102" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/charge/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehModel不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/charge/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehModel不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.070" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/mileage/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehFac不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/mileage/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehFac不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.319" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.052" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.099" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:289.59,&quot;middleChargeStartSoc&quot;:37.53,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:54.47,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null}},&quot;driverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此driverRange&quot;,&quot;expectedKey&quot;:&quot;driverRange&quot;},&quot;middleChargeStartSoc&quot;:{&quot;actualKey&quot;:&quot;不存在此middleChargeStartSoc&quot;,&quot;expectedKey&quot;:&quot;middleChargeStartSoc&quot;},&quot;standardDriverMileage&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverMileage&quot;,&quot;expectedKey&quot;:&quot;standardDriverMileage&quot;},&quot;standardPower&quot;:{&quot;actualKey&quot;:&quot;不存在此standardPower&quot;,&quot;expectedKey&quot;:&quot;standardPower&quot;},&quot;power100km&quot;:{&quot;actualKey&quot;:&quot;不存在此power100km&quot;,&quot;expectedKey&quot;:&quot;power100km&quot;},&quot;fastChargeDuration&quot;:{&quot;actualKey&quot;:&quot;不存在此fastChargeDuration&quot;,&quot;expectedKey&quot;:&quot;fastChargeDuration&quot;},&quot;middleAnxiety&quot;:{&quot;actualKey&quot;:&quot;不存在此middleAnxiety&quot;,&quot;expectedKey&quot;:&quot;middleAnxiety&quot;},&quot;satisfactionDegree&quot;:{&quot;actualKey&quot;:&quot;不存在此satisfactionDegree&quot;,&quot;expectedKey&quot;:&quot;satisfactionDegree&quot;},&quot;onlineHailedCarRatio&quot;:{&quot;actualKey&quot;:&quot;不存在此onlineHailedCarRatio&quot;,&quot;expectedKey&quot;:&quot;onlineHailedCarRatio&quot;},&quot;onlineHailedCarNumber&quot;:{&quot;actualKey&quot;:&quot;不存在此onlineHailedCarNumber&quot;,&quot;expectedKey&quot;:&quot;onlineHailedCarNumber&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:289.59,&quot;middleChargeStartSoc&quot;:37.53,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:54.47,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:289.59,&quot;middleChargeStartSoc&quot;:37.53,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:54.47,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"driverRange":289.59,"middleChargeStartSoc":37.53,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":54.47,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null}},"driverRange":{"actualKey":"不存在此driverRange","expectedKey":"driverRange"},"middleChargeStartSoc":{"actualKey":"不存在此middleChargeStartSoc","expectedKey":"middleChargeStartSoc"},"standardDriverMileage":{"actualKey":"不存在此standardDriverMileage","expectedKey":"standardDriverMileage"},"standardPower":{"actualKey":"不存在此standardPower","expectedKey":"standardPower"},"power100km":{"actualKey":"不存在此power100km","expectedKey":"power100km"},"fastChargeDuration":{"actualKey":"不存在此fastChargeDuration","expectedKey":"fastChargeDuration"},"middleAnxiety":{"actualKey":"不存在此middleAnxiety","expectedKey":"middleAnxiety"},"satisfactionDegree":{"actualKey":"不存在此satisfactionDegree","expectedKey":"satisfactionDegree"},"onlineHailedCarRatio":{"actualKey":"不存在此onlineHailedCarRatio","expectedKey":"onlineHailedCarRatio"},"onlineHailedCarNumber":{"actualKey":"不存在此onlineHailedCarNumber","expectedKey":"onlineHailedCarNumber"},"error":{"actualValue":null,"expectedValue":{"driverRange":289.59,"middleChargeStartSoc":37.53,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":54.47,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"driverRange":289.59,"middleChargeStartSoc":37.53,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":54.47,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.176" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:416,&quot;standardPower&quot;:13.9,&quot;vehFac&quot;:&quot;北汽新能源&quot;}]},&quot;Length&quot;:{&quot;actualLenth&quot;:1,&quot;expectLenth&quot;:3},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;vehCommonName&quot;:{&quot;actualKey&quot;:&quot;不存在此vehCommonName&quot;,&quot;expectedKey&quot;:&quot;vehCommonName&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;standardDriverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverRange&quot;,&quot;expectedKey&quot;:&quot;standardDriverRange&quot;},&quot;standardPower&quot;:{&quot;actualKey&quot;:&quot;不存在此standardPower&quot;,&quot;expectedKey&quot;:&quot;standardPower&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:416,&quot;standardPower&quot;:13.9,&quot;vehFac&quot;:&quot;北汽新能源&quot;}],&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:416,&quot;standardPower&quot;:13.9,&quot;vehFac&quot;:&quot;北汽新能源&quot;}],&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"BJ7000C5D3-BEV","vehCommonName":"EU5","unit":"km","standardDriverRange":416,"standardPower":13.9,"vehFac":"北汽新能源"}]},"Length":{"actualLenth":1,"expectLenth":3},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"vehCommonName":{"actualKey":"不存在此vehCommonName","expectedKey":"vehCommonName"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"standardDriverRange":{"actualKey":"不存在此standardDriverRange","expectedKey":"standardDriverRange"},"standardPower":{"actualKey":"不存在此standardPower","expectedKey":"standardPower"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"error":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"BJ7000C5D3-BEV","vehCommonName":"EU5","unit":"km","standardDriverRange":416,"standardPower":13.9,"vehFac":"北汽新能源"}],"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"BJ7000C5D3-BEV","vehCommonName":"EU5","unit":"km","standardDriverRange":416,"standardPower":13.9,"vehFac":"北汽新能源"}],"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.096" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:291.55,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:209,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:233.67,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:289.4,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:292.5,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:332.49,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:329,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:321.29,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:331.23,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:338,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:324.67,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:274.93,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:222.44,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:312.53,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:304.8,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:327.17,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:221.7,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;driverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此driverRange&quot;,&quot;expectedKey&quot;:&quot;driverRange&quot;},&quot;standardDriverMileage&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverMileage&quot;,&quot;expectedKey&quot;:&quot;standardDriverMileage&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:291.55,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:209,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:233.67,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:289.4,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:292.5,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:332.49,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:329,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:321.29,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:331.23,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:338,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:324.67,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:274.93,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:222.44,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:312.53,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:304.8,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:327.17,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:221.7,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:291.55,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:209,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:233.67,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:289.4,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:292.5,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:332.49,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:329,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:321.29,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:331.23,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:338,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:324.67,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:274.93,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:222.44,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:312.53,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:304.8,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:327.17,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:221.7,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":291.55,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":209,"month":"01"},{"driverMileage":233.67,"month":"02"},{"driverMileage":289.4,"month":"03"},{"driverMileage":292.5,"month":"04"},{"driverMileage":332.49,"month":"05"},{"driverMileage":329,"month":"06"},{"driverMileage":321.29,"month":"07"},{"driverMileage":331.23,"month":"08"},{"driverMileage":338,"month":"09"},{"driverMileage":324.67,"month":"10"},{"driverMileage":274.93,"month":"11"},{"driverMileage":222.44,"month":"12"}],"seasonType":[{"driverMileage":312.53,"season":"autumn"},{"driverMileage":304.8,"season":"spring"},{"driverMileage":327.17,"season":"summer"},{"driverMileage":221.7,"season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"driverRange":{"actualKey":"不存在此driverRange","expectedKey":"driverRange"},"standardDriverMileage":{"actualKey":"不存在此standardDriverMileage","expectedKey":"standardDriverMileage"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":291.55,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":209,"month":"01"},{"driverMileage":233.67,"month":"02"},{"driverMileage":289.4,"month":"03"},{"driverMileage":292.5,"month":"04"},{"driverMileage":332.49,"month":"05"},{"driverMileage":329,"month":"06"},{"driverMileage":321.29,"month":"07"},{"driverMileage":331.23,"month":"08"},{"driverMileage":338,"month":"09"},{"driverMileage":324.67,"month":"10"},{"driverMileage":274.93,"month":"11"},{"driverMileage":222.44,"month":"12"}],"seasonType":[{"driverMileage":312.53,"season":"autumn"},{"driverMileage":304.8,"season":"spring"},{"driverMileage":327.17,"season":"summer"},{"driverMileage":221.7,"season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":291.55,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":209,"month":"01"},{"driverMileage":233.67,"month":"02"},{"driverMileage":289.4,"month":"03"},{"driverMileage":292.5,"month":"04"},{"driverMileage":332.49,"month":"05"},{"driverMileage":329,"month":"06"},{"driverMileage":321.29,"month":"07"},{"driverMileage":331.23,"month":"08"},{"driverMileage":338,"month":"09"},{"driverMileage":324.67,"month":"10"},{"driverMileage":274.93,"month":"11"},{"driverMileage":222.44,"month":"12"}],"seasonType":[{"driverMileage":312.53,"season":"autumn"},{"driverMileage":304.8,"season":"spring"},{"driverMileage":327.17,"season":"summer"},{"driverMileage":221.7,"season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.127" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/anxiety/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehModel不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/anxiety/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehModel不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.079" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/mileage/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehModel不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/mileage/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehModel不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.165" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:37.53,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:37.98,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:36.92,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:37.64,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:38.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:36.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;middleChargeStartSoc&quot;:{&quot;actualKey&quot;:&quot;不存在此middleChargeStartSoc&quot;,&quot;expectedKey&quot;:&quot;middleChargeStartSoc&quot;},&quot;middleAnxiety&quot;:{&quot;actualKey&quot;:&quot;不存在此middleAnxiety&quot;,&quot;expectedKey&quot;:&quot;middleAnxiety&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:37.53,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:37.98,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:36.92,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:37.64,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:38.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:36.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:37.53,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:37.98,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:38,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:36.92,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:37.64,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:38.5,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:36.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":37.53,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42.5,"anxiety":"中","month":"01"},{"chargeStartSoc":31.5,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39.5,"anxiety":"中","month":"04"},{"chargeStartSoc":39,"anxiety":"中","month":"05"},{"chargeStartSoc":37.98,"anxiety":"中","month":"06"},{"chargeStartSoc":37,"anxiety":"中","month":"07"},{"chargeStartSoc":37,"anxiety":"中","month":"08"},{"chargeStartSoc":38,"anxiety":"中","month":"09"},{"chargeStartSoc":38,"anxiety":"中","month":"10"},{"chargeStartSoc":36.92,"anxiety":"中","month":"11"},{"chargeStartSoc":36,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":37.64,"anxiety":"中","season":"autumn"},{"chargeStartSoc":38.5,"anxiety":"中","season":"spring"},{"chargeStartSoc":37.33,"anxiety":"中","season":"summer"},{"chargeStartSoc":36.67,"anxiety":"中","season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"middleChargeStartSoc":{"actualKey":"不存在此middleChargeStartSoc","expectedKey":"middleChargeStartSoc"},"middleAnxiety":{"actualKey":"不存在此middleAnxiety","expectedKey":"middleAnxiety"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":37.53,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42.5,"anxiety":"中","month":"01"},{"chargeStartSoc":31.5,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39.5,"anxiety":"中","month":"04"},{"chargeStartSoc":39,"anxiety":"中","month":"05"},{"chargeStartSoc":37.98,"anxiety":"中","month":"06"},{"chargeStartSoc":37,"anxiety":"中","month":"07"},{"chargeStartSoc":37,"anxiety":"中","month":"08"},{"chargeStartSoc":38,"anxiety":"中","month":"09"},{"chargeStartSoc":38,"anxiety":"中","month":"10"},{"chargeStartSoc":36.92,"anxiety":"中","month":"11"},{"chargeStartSoc":36,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":37.64,"anxiety":"中","season":"autumn"},{"chargeStartSoc":38.5,"anxiety":"中","season":"spring"},{"chargeStartSoc":37.33,"anxiety":"中","season":"summer"},{"chargeStartSoc":36.67,"anxiety":"中","season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":37.53,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42.5,"anxiety":"中","month":"01"},{"chargeStartSoc":31.5,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39.5,"anxiety":"中","month":"04"},{"chargeStartSoc":39,"anxiety":"中","month":"05"},{"chargeStartSoc":37.98,"anxiety":"中","month":"06"},{"chargeStartSoc":37,"anxiety":"中","month":"07"},{"chargeStartSoc":37,"anxiety":"中","month":"08"},{"chargeStartSoc":38,"anxiety":"中","month":"09"},{"chargeStartSoc":38,"anxiety":"中","month":"10"},{"chargeStartSoc":36.92,"anxiety":"中","month":"11"},{"chargeStartSoc":36,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":37.64,"anxiety":"中","season":"autumn"},{"chargeStartSoc":38.5,"anxiety":"中","season":"spring"},{"chargeStartSoc":37.33,"anxiety":"中","season":"summer"},{"chargeStartSoc":36.67,"anxiety":"中","season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.096" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/exponent 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehFac不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/exponent 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehFac不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.170" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="1.096" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="4.329" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.086" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/exponent 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehModel不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/exponent 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehModel不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.075" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="1.036" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.114" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;35000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.096" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;BJ7000U3D7G-BEV&quot;,&quot;vehCommonName&quot;:&quot;EX360&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:318,&quot;standardPower&quot;:16.7,&quot;vehFac&quot;:&quot;北汽新能源&quot;}]},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;vehCommonName&quot;:{&quot;actualKey&quot;:&quot;不存在此vehCommonName&quot;,&quot;expectedKey&quot;:&quot;vehCommonName&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;standardDriverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverRange&quot;,&quot;expectedKey&quot;:&quot;standardDriverRange&quot;},&quot;standardPower&quot;:{&quot;actualKey&quot;:&quot;不存在此standardPower&quot;,&quot;expectedKey&quot;:&quot;standardPower&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;BJ7000U3D7G-BEV&quot;,&quot;vehCommonName&quot;:&quot;EX360&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:318,&quot;standardPower&quot;:16.7,&quot;vehFac&quot;:&quot;北汽新能源&quot;}],&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;BJ7000U3D7G-BEV&quot;,&quot;vehCommonName&quot;:&quot;EX360&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:318,&quot;standardPower&quot;:16.7,&quot;vehFac&quot;:&quot;北汽新能源&quot;}],&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":[{"vehModel":"BJ7000U3D7G-BEV","vehCommonName":"EX360","unit":"km","standardDriverRange":318,"standardPower":16.7,"vehFac":"北汽新能源"}]},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"vehCommonName":{"actualKey":"不存在此vehCommonName","expectedKey":"vehCommonName"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"standardDriverRange":{"actualKey":"不存在此standardDriverRange","expectedKey":"standardDriverRange"},"standardPower":{"actualKey":"不存在此standardPower","expectedKey":"standardPower"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"error":{"actualValue":null,"expectedValue":[{"vehModel":"BJ7000U3D7G-BEV","vehCommonName":"EX360","unit":"km","standardDriverRange":318,"standardPower":16.7,"vehFac":"北汽新能源"}],"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":[{"vehModel":"BJ7000U3D7G-BEV","vehCommonName":"EX360","unit":"km","standardDriverRange":318,"standardPower":16.7,"vehFac":"北汽新能源"}],"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.130" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehFac&quot;:&quot;合众汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;standardDriverMileage&quot;:301,&quot;standardPower&quot;:14}]},{&quot;vehFac&quot;:&quot;比亚迪&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;standardDriverMileage&quot;:400,&quot;standardPower&quot;:14.8},{&quot;vehCommonName&quot;:&quot;比亚迪唐&quot;,&quot;vehModel&quot;:&quot;BYD6490SBEV1&quot;,&quot;standardDriverMileage&quot;:520,&quot;standardPower&quot;:17.3}]},{&quot;vehFac&quot;:&quot;北汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;standardDriverMileage&quot;:416,&quot;standardPower&quot;:13.9}]},{&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:14.53}]},{&quot;vehFac&quot;:&quot;威马汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EX5&quot;,&quot;vehModel&quot;:&quot;SZS6460A06BEV&quot;,&quot;standardDriverMileage&quot;:303,&quot;standardPower&quot;:16.2}]},{&quot;vehFac&quot;:&quot;上汽集团&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;荣威ERX5&quot;,&quot;vehModel&quot;:&quot;CSA6456BEV2&quot;,&quot;standardDriverMileage&quot;:320,&quot;standardPower&quot;:15.49},{&quot;vehCommonName&quot;:&quot;Marvel X&quot;,&quot;vehModel&quot;:&quot;CSA6461FBEV1&quot;,&quot;standardDriverMileage&quot;:403,&quot;standardPower&quot;:14.2}]},{&quot;vehFac&quot;:&quot;长安汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003ACBEV&quot;,&quot;standardDriverMileage&quot;:305,&quot;standardPower&quot;:13.4},{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003AEBEV&quot;,&quot;standardDriverMileage&quot;:405,&quot;standardPower&quot;:13.8}]},{&quot;vehFac&quot;:&quot;广汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;传祺AION.S&quot;,&quot;vehModel&quot;:&quot;GAM7000BEVA0C&quot;,&quot;standardDriverMileage&quot;:510,&quot;standardPower&quot;:13.1}]},{&quot;vehFac&quot;:&quot;蔚来汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;ES6&quot;,&quot;vehModel&quot;:&quot;HFC6483ECEV-W&quot;,&quot;standardDriverMileage&quot;:430,&quot;standardPower&quot;:18.1},{&quot;vehCommonName&quot;:&quot;ES8&quot;,&quot;vehModel&quot;:&quot;HFC6502ECEV2-W&quot;,&quot;standardDriverMileage&quot;:355,&quot;standardPower&quot;:21}]}]},&quot;Length&quot;:{&quot;actualLenth&quot;:1,&quot;expectLenth&quot;:9},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;vehModelInfos&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModelInfos&quot;,&quot;expectedKey&quot;:&quot;vehModelInfos&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehFac&quot;:&quot;合众汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;standardDriverMileage&quot;:301,&quot;standardPower&quot;:14}]},{&quot;vehFac&quot;:&quot;比亚迪&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;standardDriverMileage&quot;:400,&quot;standardPower&quot;:14.8},{&quot;vehCommonName&quot;:&quot;比亚迪唐&quot;,&quot;vehModel&quot;:&quot;BYD6490SBEV1&quot;,&quot;standardDriverMileage&quot;:520,&quot;standardPower&quot;:17.3}]},{&quot;vehFac&quot;:&quot;北汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;standardDriverMileage&quot;:416,&quot;standardPower&quot;:13.9}]},{&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:14.53}]},{&quot;vehFac&quot;:&quot;威马汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EX5&quot;,&quot;vehModel&quot;:&quot;SZS6460A06BEV&quot;,&quot;standardDriverMileage&quot;:303,&quot;standardPower&quot;:16.2}]},{&quot;vehFac&quot;:&quot;上汽集团&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;荣威ERX5&quot;,&quot;vehModel&quot;:&quot;CSA6456BEV2&quot;,&quot;standardDriverMileage&quot;:320,&quot;standardPower&quot;:15.49},{&quot;vehCommonName&quot;:&quot;Marvel X&quot;,&quot;vehModel&quot;:&quot;CSA6461FBEV1&quot;,&quot;standardDriverMileage&quot;:403,&quot;standardPower&quot;:14.2}]},{&quot;vehFac&quot;:&quot;长安汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003ACBEV&quot;,&quot;standardDriverMileage&quot;:305,&quot;standardPower&quot;:13.4},{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003AEBEV&quot;,&quot;standardDriverMileage&quot;:405,&quot;standardPower&quot;:13.8}]},{&quot;vehFac&quot;:&quot;广汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;传祺AION.S&quot;,&quot;vehModel&quot;:&quot;GAM7000BEVA0C&quot;,&quot;standardDriverMileage&quot;:510,&quot;standardPower&quot;:13.1}]},{&quot;vehFac&quot;:&quot;蔚来汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;ES6&quot;,&quot;vehModel&quot;:&quot;HFC6483ECEV-W&quot;,&quot;standardDriverMileage&quot;:430,&quot;standardPower&quot;:18.1},{&quot;vehCommonName&quot;:&quot;ES8&quot;,&quot;vehModel&quot;:&quot;HFC6502ECEV2-W&quot;,&quot;standardDriverMileage&quot;:355,&quot;standardPower&quot;:21}]}],&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehFac&quot;:&quot;合众汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;standardDriverMileage&quot;:301,&quot;standardPower&quot;:14}]},{&quot;vehFac&quot;:&quot;比亚迪&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;standardDriverMileage&quot;:400,&quot;standardPower&quot;:14.8},{&quot;vehCommonName&quot;:&quot;比亚迪唐&quot;,&quot;vehModel&quot;:&quot;BYD6490SBEV1&quot;,&quot;standardDriverMileage&quot;:520,&quot;standardPower&quot;:17.3}]},{&quot;vehFac&quot;:&quot;北汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EU5&quot;,&quot;vehModel&quot;:&quot;BJ7000C5D3-BEV&quot;,&quot;standardDriverMileage&quot;:416,&quot;standardPower&quot;:13.9}]},{&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:14.53}]},{&quot;vehFac&quot;:&quot;威马汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EX5&quot;,&quot;vehModel&quot;:&quot;SZS6460A06BEV&quot;,&quot;standardDriverMileage&quot;:303,&quot;standardPower&quot;:16.2}]},{&quot;vehFac&quot;:&quot;上汽集团&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;荣威ERX5&quot;,&quot;vehModel&quot;:&quot;CSA6456BEV2&quot;,&quot;standardDriverMileage&quot;:320,&quot;standardPower&quot;:15.49},{&quot;vehCommonName&quot;:&quot;Marvel X&quot;,&quot;vehModel&quot;:&quot;CSA6461FBEV1&quot;,&quot;standardDriverMileage&quot;:403,&quot;standardPower&quot;:14.2}]},{&quot;vehFac&quot;:&quot;长安汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003ACBEV&quot;,&quot;standardDriverMileage&quot;:305,&quot;standardPower&quot;:13.4},{&quot;vehCommonName&quot;:&quot;EADO&quot;,&quot;vehModel&quot;:&quot;SC7003AEBEV&quot;,&quot;standardDriverMileage&quot;:405,&quot;standardPower&quot;:13.8}]},{&quot;vehFac&quot;:&quot;广汽新能源&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;传祺AION.S&quot;,&quot;vehModel&quot;:&quot;GAM7000BEVA0C&quot;,&quot;standardDriverMileage&quot;:510,&quot;standardPower&quot;:13.1}]},{&quot;vehFac&quot;:&quot;蔚来汽车&quot;,&quot;vehModelInfos&quot;:[{&quot;vehCommonName&quot;:&quot;ES6&quot;,&quot;vehModel&quot;:&quot;HFC6483ECEV-W&quot;,&quot;standardDriverMileage&quot;:430,&quot;standardPower&quot;:18.1},{&quot;vehCommonName&quot;:&quot;ES8&quot;,&quot;vehModel&quot;:&quot;HFC6502ECEV2-W&quot;,&quot;standardDriverMileage&quot;:355,&quot;standardPower&quot;:21}]}],&quot;currentValue is &quot;:&quot;20000&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":[{"vehFac":"合众汽车","vehModelInfos":[{"vehCommonName":"哪吒N01","vehModel":"THZ7000BEVS004","standardDriverMileage":301,"standardPower":14}]},{"vehFac":"比亚迪","vehModelInfos":[{"vehCommonName":"E5","vehModel":"BYD7005BEV1","standardDriverMileage":400,"standardPower":14.8},{"vehCommonName":"比亚迪唐","vehModel":"BYD6490SBEV1","standardDriverMileage":520,"standardPower":17.3}]},{"vehFac":"北汽新能源","vehModelInfos":[{"vehCommonName":"EU5","vehModel":"BJ7000C5D3-BEV","standardDriverMileage":416,"standardPower":13.9}]},{"vehFac":"吉利汽车","vehModelInfos":[{"vehCommonName":"帝豪GSE400","vehModel":"HQ7002BEV15","standardDriverMileage":353,"standardPower":14.53}]},{"vehFac":"威马汽车","vehModelInfos":[{"vehCommonName":"EX5","vehModel":"SZS6460A06BEV","standardDriverMileage":303,"standardPower":16.2}]},{"vehFac":"上汽集团","vehModelInfos":[{"vehCommonName":"荣威ERX5","vehModel":"CSA6456BEV2","standardDriverMileage":320,"standardPower":15.49},{"vehCommonName":"Marvel X","vehModel":"CSA6461FBEV1","standardDriverMileage":403,"standardPower":14.2}]},{"vehFac":"长安汽车","vehModelInfos":[{"vehCommonName":"EADO","vehModel":"SC7003ACBEV","standardDriverMileage":305,"standardPower":13.4},{"vehCommonName":"EADO","vehModel":"SC7003AEBEV","standardDriverMileage":405,"standardPower":13.8}]},{"vehFac":"广汽新能源","vehModelInfos":[{"vehCommonName":"传祺AION.S","vehModel":"GAM7000BEVA0C","standardDriverMileage":510,"standardPower":13.1}]},{"vehFac":"蔚来汽车","vehModelInfos":[{"vehCommonName":"ES6","vehModel":"HFC6483ECEV-W","standardDriverMileage":430,"standardPower":18.1},{"vehCommonName":"ES8","vehModel":"HFC6502ECEV2-W","standardDriverMileage":355,"standardPower":21}]}]},"Length":{"actualLenth":1,"expectLenth":9},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"vehModelInfos":{"actualKey":"不存在此vehModelInfos","expectedKey":"vehModelInfos"},"error":{"actualValue":null,"expectedValue":[{"vehFac":"合众汽车","vehModelInfos":[{"vehCommonName":"哪吒N01","vehModel":"THZ7000BEVS004","standardDriverMileage":301,"standardPower":14}]},{"vehFac":"比亚迪","vehModelInfos":[{"vehCommonName":"E5","vehModel":"BYD7005BEV1","standardDriverMileage":400,"standardPower":14.8},{"vehCommonName":"比亚迪唐","vehModel":"BYD6490SBEV1","standardDriverMileage":520,"standardPower":17.3}]},{"vehFac":"北汽新能源","vehModelInfos":[{"vehCommonName":"EU5","vehModel":"BJ7000C5D3-BEV","standardDriverMileage":416,"standardPower":13.9}]},{"vehFac":"吉利汽车","vehModelInfos":[{"vehCommonName":"帝豪GSE400","vehModel":"HQ7002BEV15","standardDriverMileage":353,"standardPower":14.53}]},{"vehFac":"威马汽车","vehModelInfos":[{"vehCommonName":"EX5","vehModel":"SZS6460A06BEV","standardDriverMileage":303,"standardPower":16.2}]},{"vehFac":"上汽集团","vehModelInfos":[{"vehCommonName":"荣威ERX5","vehModel":"CSA6456BEV2","standardDriverMileage":320,"standardPower":15.49},{"vehCommonName":"Marvel X","vehModel":"CSA6461FBEV1","standardDriverMileage":403,"standardPower":14.2}]},{"vehFac":"长安汽车","vehModelInfos":[{"vehCommonName":"EADO","vehModel":"SC7003ACBEV","standardDriverMileage":305,"standardPower":13.4},{"vehCommonName":"EADO","vehModel":"SC7003AEBEV","standardDriverMileage":405,"standardPower":13.8}]},{"vehFac":"广汽新能源","vehModelInfos":[{"vehCommonName":"传祺AION.S","vehModel":"GAM7000BEVA0C","standardDriverMileage":510,"standardPower":13.1}]},{"vehFac":"蔚来汽车","vehModelInfos":[{"vehCommonName":"ES6","vehModel":"HFC6483ECEV-W","standardDriverMileage":430,"standardPower":18.1},{"vehCommonName":"ES8","vehModel":"HFC6502ECEV2-W","standardDriverMileage":355,"standardPower":21}]}],"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":[{"vehFac":"合众汽车","vehModelInfos":[{"vehCommonName":"哪吒N01","vehModel":"THZ7000BEVS004","standardDriverMileage":301,"standardPower":14}]},{"vehFac":"比亚迪","vehModelInfos":[{"vehCommonName":"E5","vehModel":"BYD7005BEV1","standardDriverMileage":400,"standardPower":14.8},{"vehCommonName":"比亚迪唐","vehModel":"BYD6490SBEV1","standardDriverMileage":520,"standardPower":17.3}]},{"vehFac":"北汽新能源","vehModelInfos":[{"vehCommonName":"EU5","vehModel":"BJ7000C5D3-BEV","standardDriverMileage":416,"standardPower":13.9}]},{"vehFac":"吉利汽车","vehModelInfos":[{"vehCommonName":"帝豪GSE400","vehModel":"HQ7002BEV15","standardDriverMileage":353,"standardPower":14.53}]},{"vehFac":"威马汽车","vehModelInfos":[{"vehCommonName":"EX5","vehModel":"SZS6460A06BEV","standardDriverMileage":303,"standardPower":16.2}]},{"vehFac":"上汽集团","vehModelInfos":[{"vehCommonName":"荣威ERX5","vehModel":"CSA6456BEV2","standardDriverMileage":320,"standardPower":15.49},{"vehCommonName":"Marvel X","vehModel":"CSA6461FBEV1","standardDriverMileage":403,"standardPower":14.2}]},{"vehFac":"长安汽车","vehModelInfos":[{"vehCommonName":"EADO","vehModel":"SC7003ACBEV","standardDriverMileage":305,"standardPower":13.4},{"vehCommonName":"EADO","vehModel":"SC7003AEBEV","standardDriverMileage":405,"standardPower":13.8}]},{"vehFac":"广汽新能源","vehModelInfos":[{"vehCommonName":"传祺AION.S","vehModel":"GAM7000BEVA0C","standardDriverMileage":510,"standardPower":13.1}]},{"vehFac":"蔚来汽车","vehModelInfos":[{"vehCommonName":"ES6","vehModel":"HFC6483ECEV-W","standardDriverMileage":430,"standardPower":18.1},{"vehCommonName":"ES8","vehModel":"HFC6502ECEV2-W","standardDriverMileage":355,"standardPower":21}]}],"currentValue is ":"20000","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.089" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.123" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vin&quot;:&quot;LC06S64M0H1993466&quot;,&quot;trips&quot;:[{&quot;st_time_e&quot;:1577754843000,&quot;et_time_e&quot;:1577759972000,&quot;start_longitude&quot;:114.02723,&quot;start_latitude&quot;:22.62005,&quot;start_province&quot;:&quot;广东省&quot;,&quot;start_city&quot;:&quot;深圳市&quot;,&quot;start_district&quot;:&quot;南山区&quot;,&quot;end_longitude&quot;:113.99717,&quot;end_latitude&quot;:22.54831,&quot;end_province&quot;:&quot;广东省&quot;,&quot;end_city&quot;:&quot;深圳市&quot;,&quot;end_district&quot;:&quot;福田区&quot;,&quot;time_length&quot;:5129000,&quot;start_mileage&quot;:144357.9,&quot;stop_mileage&quot;:144381.2,&quot;max_speed&quot;:53,&quot;avg_speed&quot;:24.85}]}},&quot;vin&quot;:{&quot;actualKey&quot;:&quot;不存在此vin&quot;,&quot;expectedKey&quot;:&quot;vin&quot;},&quot;trips&quot;:{&quot;actualKey&quot;:&quot;不存在此trips&quot;,&quot;expectedKey&quot;:&quot;trips&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vin&quot;:&quot;LC06S64M0H1993466&quot;,&quot;trips&quot;:[{&quot;st_time_e&quot;:1577754843000,&quot;et_time_e&quot;:1577759972000,&quot;start_longitude&quot;:114.02723,&quot;start_latitude&quot;:22.62005,&quot;start_province&quot;:&quot;广东省&quot;,&quot;start_city&quot;:&quot;深圳市&quot;,&quot;start_district&quot;:&quot;南山区&quot;,&quot;end_longitude&quot;:113.99717,&quot;end_latitude&quot;:22.54831,&quot;end_province&quot;:&quot;广东省&quot;,&quot;end_city&quot;:&quot;深圳市&quot;,&quot;end_district&quot;:&quot;福田区&quot;,&quot;time_length&quot;:5129000,&quot;start_mileage&quot;:144357.9,&quot;stop_mileage&quot;:144381.2,&quot;max_speed&quot;:53,&quot;avg_speed&quot;:24.85}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vin&quot;:&quot;LC06S64M0H1993466&quot;,&quot;trips&quot;:[{&quot;st_time_e&quot;:1577754843000,&quot;et_time_e&quot;:1577759972000,&quot;start_longitude&quot;:114.02723,&quot;start_latitude&quot;:22.62005,&quot;start_province&quot;:&quot;广东省&quot;,&quot;start_city&quot;:&quot;深圳市&quot;,&quot;start_district&quot;:&quot;南山区&quot;,&quot;end_longitude&quot;:113.99717,&quot;end_latitude&quot;:22.54831,&quot;end_province&quot;:&quot;广东省&quot;,&quot;end_city&quot;:&quot;深圳市&quot;,&quot;end_district&quot;:&quot;福田区&quot;,&quot;time_length&quot;:5129000,&quot;start_mileage&quot;:144357.9,&quot;stop_mileage&quot;:144381.2,&quot;max_speed&quot;:53,&quot;avg_speed&quot;:24.85}]},&quot;currentValue is &quot;:&quot;40000&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vin":"LC06S64M0H1993466","trips":[{"st_time_e":1577754843000,"et_time_e":1577759972000,"start_longitude":114.02723,"start_latitude":22.62005,"start_province":"广东省","start_city":"深圳市","start_district":"南山区","end_longitude":113.99717,"end_latitude":22.54831,"end_province":"广东省","end_city":"深圳市","end_district":"福田区","time_length":5129000,"start_mileage":144357.9,"stop_mileage":144381.2,"max_speed":53,"avg_speed":24.85}]}},"vin":{"actualKey":"不存在此vin","expectedKey":"vin"},"trips":{"actualKey":"不存在此trips","expectedKey":"trips"},"error":{"actualValue":null,"expectedValue":{"vin":"LC06S64M0H1993466","trips":[{"st_time_e":1577754843000,"et_time_e":1577759972000,"start_longitude":114.02723,"start_latitude":22.62005,"start_province":"广东省","start_city":"深圳市","start_district":"南山区","end_longitude":113.99717,"end_latitude":22.54831,"end_province":"广东省","end_city":"深圳市","end_district":"福田区","time_length":5129000,"start_mileage":144357.9,"stop_mileage":144381.2,"max_speed":53,"avg_speed":24.85}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vin":"LC06S64M0H1993466","trips":[{"st_time_e":1577754843000,"et_time_e":1577759972000,"start_longitude":114.02723,"start_latitude":22.62005,"start_province":"广东省","start_city":"深圳市","start_district":"南山区","end_longitude":113.99717,"end_latitude":22.54831,"end_province":"广东省","end_city":"深圳市","end_district":"福田区","time_length":5129000,"start_mileage":144357.9,"stop_mileage":144381.2,"max_speed":53,"avg_speed":24.85}]},"currentValue is ":"40000","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.120" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/rank 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数type不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/rank 不存在","expectedValue is":400,"expectedValue is ":"请求参数type不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.166" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;brand&quot;:&quot;比亚迪&quot;,&quot;bsie&quot;:18,&quot;bulletinNO&quot;:&quot;BYD6460STHEV10&quot;,&quot;platform&quot;:&quot;私人&quot;,&quot;series&quot;:&quot;未知&quot;,&quot;seurityMonitor&quot;:true,&quot;type&quot;:&quot;BYD6460STHEV10&quot;,&quot;use&quot;:&quot;02&quot;,&quot;vin&quot;:&quot;14b8e610b61d2e7e6102144c1fa9df24&quot;}},&quot;brand&quot;:{&quot;actualKey&quot;:&quot;不存在此brand&quot;,&quot;expectedKey&quot;:&quot;brand&quot;},&quot;bsie&quot;:{&quot;actualKey&quot;:&quot;不存在此bsie&quot;,&quot;expectedKey&quot;:&quot;bsie&quot;},&quot;bulletinNO&quot;:{&quot;actualKey&quot;:&quot;不存在此bulletinNO&quot;,&quot;expectedKey&quot;:&quot;bulletinNO&quot;},&quot;platform&quot;:{&quot;actualKey&quot;:&quot;不存在此platform&quot;,&quot;expectedKey&quot;:&quot;platform&quot;},&quot;series&quot;:{&quot;actualKey&quot;:&quot;不存在此series&quot;,&quot;expectedKey&quot;:&quot;series&quot;},&quot;seurityMonitor&quot;:{&quot;actualKey&quot;:&quot;不存在此seurityMonitor&quot;,&quot;expectedKey&quot;:&quot;seurityMonitor&quot;},&quot;type&quot;:{&quot;actualKey&quot;:&quot;不存在此type&quot;,&quot;expectedKey&quot;:&quot;type&quot;},&quot;use&quot;:{&quot;actualKey&quot;:&quot;不存在此use&quot;,&quot;expectedKey&quot;:&quot;use&quot;},&quot;vin&quot;:{&quot;actualKey&quot;:&quot;不存在此vin&quot;,&quot;expectedKey&quot;:&quot;vin&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;brand&quot;:&quot;比亚迪&quot;,&quot;bsie&quot;:18,&quot;bulletinNO&quot;:&quot;BYD6460STHEV10&quot;,&quot;platform&quot;:&quot;私人&quot;,&quot;series&quot;:&quot;未知&quot;,&quot;seurityMonitor&quot;:true,&quot;type&quot;:&quot;BYD6460STHEV10&quot;,&quot;use&quot;:&quot;02&quot;,&quot;vin&quot;:&quot;14b8e610b61d2e7e6102144c1fa9df24&quot;},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;brand&quot;:&quot;比亚迪&quot;,&quot;bsie&quot;:18,&quot;bulletinNO&quot;:&quot;BYD6460STHEV10&quot;,&quot;platform&quot;:&quot;私人&quot;,&quot;series&quot;:&quot;未知&quot;,&quot;seurityMonitor&quot;:true,&quot;type&quot;:&quot;BYD6460STHEV10&quot;,&quot;use&quot;:&quot;02&quot;,&quot;vin&quot;:&quot;14b8e610b61d2e7e6102144c1fa9df24&quot;},&quot;currentValue is &quot;:&quot;20000&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"brand":"比亚迪","bsie":18,"bulletinNO":"BYD6460STHEV10","platform":"私人","series":"未知","seurityMonitor":true,"type":"BYD6460STHEV10","use":"02","vin":"14b8e610b61d2e7e6102144c1fa9df24"}},"brand":{"actualKey":"不存在此brand","expectedKey":"brand"},"bsie":{"actualKey":"不存在此bsie","expectedKey":"bsie"},"bulletinNO":{"actualKey":"不存在此bulletinNO","expectedKey":"bulletinNO"},"platform":{"actualKey":"不存在此platform","expectedKey":"platform"},"series":{"actualKey":"不存在此series","expectedKey":"series"},"seurityMonitor":{"actualKey":"不存在此seurityMonitor","expectedKey":"seurityMonitor"},"type":{"actualKey":"不存在此type","expectedKey":"type"},"use":{"actualKey":"不存在此use","expectedKey":"use"},"vin":{"actualKey":"不存在此vin","expectedKey":"vin"},"error":{"actualValue":null,"expectedValue":{"brand":"比亚迪","bsie":18,"bulletinNO":"BYD6460STHEV10","platform":"私人","series":"未知","seurityMonitor":true,"type":"BYD6460STHEV10","use":"02","vin":"14b8e610b61d2e7e6102144c1fa9df24"},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"brand":"比亚迪","bsie":18,"bulletinNO":"BYD6460STHEV10","platform":"私人","series":"未知","seurityMonitor":true,"type":"BYD6460STHEV10","use":"02","vin":"14b8e610b61d2e7e6102144c1fa9df24"},"currentValue is ":"20000","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.070" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:291.55,&quot;middleChargeStartSoc&quot;:35.42,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:59.06,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null}},&quot;driverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此driverRange&quot;,&quot;expectedKey&quot;:&quot;driverRange&quot;},&quot;middleChargeStartSoc&quot;:{&quot;actualKey&quot;:&quot;不存在此middleChargeStartSoc&quot;,&quot;expectedKey&quot;:&quot;middleChargeStartSoc&quot;},&quot;standardDriverMileage&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverMileage&quot;,&quot;expectedKey&quot;:&quot;standardDriverMileage&quot;},&quot;standardPower&quot;:{&quot;actualKey&quot;:&quot;不存在此standardPower&quot;,&quot;expectedKey&quot;:&quot;standardPower&quot;},&quot;power100km&quot;:{&quot;actualKey&quot;:&quot;不存在此power100km&quot;,&quot;expectedKey&quot;:&quot;power100km&quot;},&quot;fastChargeDuration&quot;:{&quot;actualKey&quot;:&quot;不存在此fastChargeDuration&quot;,&quot;expectedKey&quot;:&quot;fastChargeDuration&quot;},&quot;middleAnxiety&quot;:{&quot;actualKey&quot;:&quot;不存在此middleAnxiety&quot;,&quot;expectedKey&quot;:&quot;middleAnxiety&quot;},&quot;satisfactionDegree&quot;:{&quot;actualKey&quot;:&quot;不存在此satisfactionDegree&quot;,&quot;expectedKey&quot;:&quot;satisfactionDegree&quot;},&quot;onlineHailedCarRatio&quot;:{&quot;actualKey&quot;:&quot;不存在此onlineHailedCarRatio&quot;,&quot;expectedKey&quot;:&quot;onlineHailedCarRatio&quot;},&quot;onlineHailedCarNumber&quot;:{&quot;actualKey&quot;:&quot;不存在此onlineHailedCarNumber&quot;,&quot;expectedKey&quot;:&quot;onlineHailedCarNumber&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:291.55,&quot;middleChargeStartSoc&quot;:35.42,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:59.06,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;driverRange&quot;:291.55,&quot;middleChargeStartSoc&quot;:35.42,&quot;standardDriverMileage&quot;:353,&quot;standardPower&quot;:null,&quot;power100km&quot;:null,&quot;fastChargeDuration&quot;:59.06,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;onlineHailedCarRatio&quot;:null,&quot;onlineHailedCarNumber&quot;:null},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"driverRange":291.55,"middleChargeStartSoc":35.42,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":59.06,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null}},"driverRange":{"actualKey":"不存在此driverRange","expectedKey":"driverRange"},"middleChargeStartSoc":{"actualKey":"不存在此middleChargeStartSoc","expectedKey":"middleChargeStartSoc"},"standardDriverMileage":{"actualKey":"不存在此standardDriverMileage","expectedKey":"standardDriverMileage"},"standardPower":{"actualKey":"不存在此standardPower","expectedKey":"standardPower"},"power100km":{"actualKey":"不存在此power100km","expectedKey":"power100km"},"fastChargeDuration":{"actualKey":"不存在此fastChargeDuration","expectedKey":"fastChargeDuration"},"middleAnxiety":{"actualKey":"不存在此middleAnxiety","expectedKey":"middleAnxiety"},"satisfactionDegree":{"actualKey":"不存在此satisfactionDegree","expectedKey":"satisfactionDegree"},"onlineHailedCarRatio":{"actualKey":"不存在此onlineHailedCarRatio","expectedKey":"onlineHailedCarRatio"},"onlineHailedCarNumber":{"actualKey":"不存在此onlineHailedCarNumber","expectedKey":"onlineHailedCarNumber"},"error":{"actualValue":null,"expectedValue":{"driverRange":291.55,"middleChargeStartSoc":35.42,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":59.06,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"driverRange":291.55,"middleChargeStartSoc":35.42,"standardDriverMileage":353,"standardPower":null,"power100km":null,"fastChargeDuration":59.06,"middleAnxiety":"中","satisfactionDegree":"低","onlineHailedCarRatio":null,"onlineHailedCarNumber":null},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.325" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;20000&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;35000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"20000","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.109" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;35000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.097" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;40000&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;35000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"40000","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.038" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.077" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.111" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;35000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.097" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.087" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:35.42,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:34,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:35.08,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:34.36,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:34.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:35.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;middleChargeStartSoc&quot;:{&quot;actualKey&quot;:&quot;不存在此middleChargeStartSoc&quot;,&quot;expectedKey&quot;:&quot;middleChargeStartSoc&quot;},&quot;middleAnxiety&quot;:{&quot;actualKey&quot;:&quot;不存在此middleAnxiety&quot;,&quot;expectedKey&quot;:&quot;middleAnxiety&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:35.42,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:34,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:35.08,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:34.36,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:34.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:35.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;middleChargeStartSoc&quot;:35.42,&quot;middleAnxiety&quot;:&quot;中&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;%&quot;,&quot;monthType&quot;:[{&quot;chargeStartSoc&quot;:42,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;chargeStartSoc&quot;:31,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;chargeStartSoc&quot;:37,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;chargeStartSoc&quot;:39,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;chargeStartSoc&quot;:36,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;chargeStartSoc&quot;:34,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;chargeStartSoc&quot;:35.08,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;chargeStartSoc&quot;:35,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;chargeStartSoc&quot;:33,&quot;anxiety&quot;:&quot;中&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;chargeStartSoc&quot;:34.36,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;chargeStartSoc&quot;:37.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;chargeStartSoc&quot;:34.67,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;chargeStartSoc&quot;:35.33,&quot;anxiety&quot;:&quot;中&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":35.42,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42,"anxiety":"中","month":"01"},{"chargeStartSoc":31,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39,"anxiety":"中","month":"04"},{"chargeStartSoc":36,"anxiety":"中","month":"05"},{"chargeStartSoc":35,"anxiety":"中","month":"06"},{"chargeStartSoc":34,"anxiety":"中","month":"07"},{"chargeStartSoc":35,"anxiety":"中","month":"08"},{"chargeStartSoc":35.08,"anxiety":"中","month":"09"},{"chargeStartSoc":35,"anxiety":"中","month":"10"},{"chargeStartSoc":33,"anxiety":"中","month":"11"},{"chargeStartSoc":33,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":34.36,"anxiety":"中","season":"autumn"},{"chargeStartSoc":37.33,"anxiety":"中","season":"spring"},{"chargeStartSoc":34.67,"anxiety":"中","season":"summer"},{"chargeStartSoc":35.33,"anxiety":"中","season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"middleChargeStartSoc":{"actualKey":"不存在此middleChargeStartSoc","expectedKey":"middleChargeStartSoc"},"middleAnxiety":{"actualKey":"不存在此middleAnxiety","expectedKey":"middleAnxiety"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":35.42,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42,"anxiety":"中","month":"01"},{"chargeStartSoc":31,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39,"anxiety":"中","month":"04"},{"chargeStartSoc":36,"anxiety":"中","month":"05"},{"chargeStartSoc":35,"anxiety":"中","month":"06"},{"chargeStartSoc":34,"anxiety":"中","month":"07"},{"chargeStartSoc":35,"anxiety":"中","month":"08"},{"chargeStartSoc":35.08,"anxiety":"中","month":"09"},{"chargeStartSoc":35,"anxiety":"中","month":"10"},{"chargeStartSoc":33,"anxiety":"中","month":"11"},{"chargeStartSoc":33,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":34.36,"anxiety":"中","season":"autumn"},{"chargeStartSoc":37.33,"anxiety":"中","season":"spring"},{"chargeStartSoc":34.67,"anxiety":"中","season":"summer"},{"chargeStartSoc":35.33,"anxiety":"中","season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","middleChargeStartSoc":35.42,"middleAnxiety":"中","vehFac":"吉利汽车","unit":"%","monthType":[{"chargeStartSoc":42,"anxiety":"中","month":"01"},{"chargeStartSoc":31,"anxiety":"中","month":"02"},{"chargeStartSoc":37,"anxiety":"中","month":"03"},{"chargeStartSoc":39,"anxiety":"中","month":"04"},{"chargeStartSoc":36,"anxiety":"中","month":"05"},{"chargeStartSoc":35,"anxiety":"中","month":"06"},{"chargeStartSoc":34,"anxiety":"中","month":"07"},{"chargeStartSoc":35,"anxiety":"中","month":"08"},{"chargeStartSoc":35.08,"anxiety":"中","month":"09"},{"chargeStartSoc":35,"anxiety":"中","month":"10"},{"chargeStartSoc":33,"anxiety":"中","month":"11"},{"chargeStartSoc":33,"anxiety":"中","month":"12"}],"seasonType":[{"chargeStartSoc":34.36,"anxiety":"中","season":"autumn"},{"chargeStartSoc":37.33,"anxiety":"中","season":"spring"},{"chargeStartSoc":34.67,"anxiety":"中","season":"summer"},{"chargeStartSoc":35.33,"anxiety":"中","season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.052" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.086" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:353,&quot;standardPower&quot;:14.53,&quot;vehFac&quot;:&quot;吉利汽车&quot;}]},&quot;Length&quot;:{&quot;actualLenth&quot;:1,&quot;expectLenth&quot;:3},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;vehCommonName&quot;:{&quot;actualKey&quot;:&quot;不存在此vehCommonName&quot;,&quot;expectedKey&quot;:&quot;vehCommonName&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;standardDriverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverRange&quot;,&quot;expectedKey&quot;:&quot;standardDriverRange&quot;},&quot;standardPower&quot;:{&quot;actualKey&quot;:&quot;不存在此standardPower&quot;,&quot;expectedKey&quot;:&quot;standardPower&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:353,&quot;standardPower&quot;:14.53,&quot;vehFac&quot;:&quot;吉利汽车&quot;}],&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:[{&quot;vehModel&quot;:&quot;THZ7000BEVS004&quot;,&quot;vehCommonName&quot;:&quot;哪吒N01&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:301,&quot;standardPower&quot;:14,&quot;vehFac&quot;:&quot;合众汽车&quot;},{&quot;vehModel&quot;:&quot;BYD7005BEV1&quot;,&quot;vehCommonName&quot;:&quot;E5&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:400,&quot;standardPower&quot;:14.8,&quot;vehFac&quot;:&quot;比亚迪&quot;},{&quot;vehModel&quot;:&quot;HQ7002BEV15&quot;,&quot;vehCommonName&quot;:&quot;帝豪GSE400&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;standardDriverRange&quot;:353,&quot;standardPower&quot;:14.53,&quot;vehFac&quot;:&quot;吉利汽车&quot;}],&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"HQ7002BEV15","vehCommonName":"帝豪GSE400","unit":"km","standardDriverRange":353,"standardPower":14.53,"vehFac":"吉利汽车"}]},"Length":{"actualLenth":1,"expectLenth":3},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"vehCommonName":{"actualKey":"不存在此vehCommonName","expectedKey":"vehCommonName"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"standardDriverRange":{"actualKey":"不存在此standardDriverRange","expectedKey":"standardDriverRange"},"standardPower":{"actualKey":"不存在此standardPower","expectedKey":"standardPower"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"error":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"HQ7002BEV15","vehCommonName":"帝豪GSE400","unit":"km","standardDriverRange":353,"standardPower":14.53,"vehFac":"吉利汽车"}],"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":[{"vehModel":"THZ7000BEVS004","vehCommonName":"哪吒N01","unit":"km","standardDriverRange":301,"standardPower":14,"vehFac":"合众汽车"},{"vehModel":"BYD7005BEV1","vehCommonName":"E5","unit":"km","standardDriverRange":400,"standardPower":14.8,"vehFac":"比亚迪"},{"vehModel":"HQ7002BEV15","vehCommonName":"帝豪GSE400","unit":"km","standardDriverRange":353,"standardPower":14.53,"vehFac":"吉利汽车"}],"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.058" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.130" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;error&quot;:{&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.182" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/charge/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehFac不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/charge/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehFac不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.375" classname="com.bitnei.apitest.testcases.saas.ApiTest"/>
  <testcase name="ApiTestCode" time="0.118" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;status&quot;:{&quot;currentValue is &quot;:200,&quot;expectedValue is&quot;:400},&quot;errorMsg&quot;:{&quot;currentValue is &quot;:&quot;接口 /external-api/laboratory/models/reliable/anxiety/detail 不存在&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;请求参数vehFac不能为空！&quot;},&quot;code&quot;:{&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:400,&quot;expectedValue is &quot;:&quot;30001&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":400},"errorMsg":{"currentValue is ":"接口 /external-api/laboratory/models/reliable/anxiety/detail 不存在","expectedValue is":400,"expectedValue is ":"请求参数vehFac不能为空！"},"code":{"currentValue is ":"30007","expectedValue is":400,"expectedValue is ":"30001"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.197" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:59.06,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:50.28,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:49,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:50.63,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:48.96,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:48.58,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:50,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:56.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:64.19,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:51.8,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:71.48,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:49.53,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:67.56,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;fastChargeDuration&quot;:{&quot;actualKey&quot;:&quot;不存在此fastChargeDuration&quot;,&quot;expectedKey&quot;:&quot;fastChargeDuration&quot;},&quot;satisfactionDegree&quot;:{&quot;actualKey&quot;:&quot;不存在此satisfactionDegree&quot;,&quot;expectedKey&quot;:&quot;satisfactionDegree&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:59.06,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:50.28,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:49,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:50.63,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:48.96,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:48.58,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:50,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:56.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:64.19,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:51.8,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:71.48,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:49.53,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:67.56,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:59.06,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:50.28,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:49,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:50.63,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:48.96,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:48.58,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:50,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:56.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:64.19,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:51.8,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:71.48,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:49.53,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:67.56,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":59.06,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":50.28,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":49,"satisfactionDegree":"低","month":"06"},{"fastChargeTime":50.63,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":48.96,"satisfactionDegree":"低","month":"08"},{"fastChargeTime":48.58,"satisfactionDegree":"低","month":"09"},{"fastChargeTime":50,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":56.83,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":64.19,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":51.8,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":71.48,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":49.53,"satisfactionDegree":"低","season":"summer"},{"fastChargeTime":67.56,"satisfactionDegree":"低","season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"fastChargeDuration":{"actualKey":"不存在此fastChargeDuration","expectedKey":"fastChargeDuration"},"satisfactionDegree":{"actualKey":"不存在此satisfactionDegree","expectedKey":"satisfactionDegree"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":59.06,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":50.28,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":49,"satisfactionDegree":"低","month":"06"},{"fastChargeTime":50.63,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":48.96,"satisfactionDegree":"低","month":"08"},{"fastChargeTime":48.58,"satisfactionDegree":"低","month":"09"},{"fastChargeTime":50,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":56.83,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":64.19,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":51.8,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":71.48,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":49.53,"satisfactionDegree":"低","season":"summer"},{"fastChargeTime":67.56,"satisfactionDegree":"低","season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":59.06,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":50.28,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":49,"satisfactionDegree":"低","month":"06"},{"fastChargeTime":50.63,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":48.96,"satisfactionDegree":"低","month":"08"},{"fastChargeTime":48.58,"satisfactionDegree":"低","month":"09"},{"fastChargeTime":50,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":56.83,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":64.19,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":51.8,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":71.48,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":49.53,"satisfactionDegree":"低","season":"summer"},{"fastChargeTime":67.56,"satisfactionDegree":"低","season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.113" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:54.47,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:45.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:44.5,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:45.14,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:44.34,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:44.73,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:45.18,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:47.66,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:50.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:45.86,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:69.17,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:44.66,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:63.11,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;fastChargeDuration&quot;:{&quot;actualKey&quot;:&quot;不存在此fastChargeDuration&quot;,&quot;expectedKey&quot;:&quot;fastChargeDuration&quot;},&quot;satisfactionDegree&quot;:{&quot;actualKey&quot;:&quot;不存在此satisfactionDegree&quot;,&quot;expectedKey&quot;:&quot;satisfactionDegree&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:54.47,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:45.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:44.5,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:45.14,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:44.34,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:44.73,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:45.18,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:47.66,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:50.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:45.86,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:69.17,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:44.66,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:63.11,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;fastChargeDuration&quot;:54.47,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;min&quot;,&quot;monthType&quot;:[{&quot;fastChargeTime&quot;:97.5,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;01&quot;},{&quot;fastChargeTime&quot;:41,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;02&quot;},{&quot;fastChargeTime&quot;:92.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;03&quot;},{&quot;fastChargeTime&quot;:0,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;04&quot;},{&quot;fastChargeTime&quot;:45.67,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;05&quot;},{&quot;fastChargeTime&quot;:44.5,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;06&quot;},{&quot;fastChargeTime&quot;:45.14,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;07&quot;},{&quot;fastChargeTime&quot;:44.34,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;08&quot;},{&quot;fastChargeTime&quot;:44.73,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;month&quot;:&quot;09&quot;},{&quot;fastChargeTime&quot;:45.18,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;10&quot;},{&quot;fastChargeTime&quot;:47.66,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;11&quot;},{&quot;fastChargeTime&quot;:50.83,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;fastChargeTime&quot;:45.86,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;autumn&quot;},{&quot;fastChargeTime&quot;:69.17,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;spring&quot;},{&quot;fastChargeTime&quot;:44.66,&quot;satisfactionDegree&quot;:&quot;中&quot;,&quot;season&quot;:&quot;summer&quot;},{&quot;fastChargeTime&quot;:63.11,&quot;satisfactionDegree&quot;:&quot;低&quot;,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":54.47,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":45.67,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":44.5,"satisfactionDegree":"中","month":"06"},{"fastChargeTime":45.14,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":44.34,"satisfactionDegree":"中","month":"08"},{"fastChargeTime":44.73,"satisfactionDegree":"中","month":"09"},{"fastChargeTime":45.18,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":47.66,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":50.83,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":45.86,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":69.17,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":44.66,"satisfactionDegree":"中","season":"summer"},{"fastChargeTime":63.11,"satisfactionDegree":"低","season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"fastChargeDuration":{"actualKey":"不存在此fastChargeDuration","expectedKey":"fastChargeDuration"},"satisfactionDegree":{"actualKey":"不存在此satisfactionDegree","expectedKey":"satisfactionDegree"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":54.47,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":45.67,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":44.5,"satisfactionDegree":"中","month":"06"},{"fastChargeTime":45.14,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":44.34,"satisfactionDegree":"中","month":"08"},{"fastChargeTime":44.73,"satisfactionDegree":"中","month":"09"},{"fastChargeTime":45.18,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":47.66,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":50.83,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":45.86,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":69.17,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":44.66,"satisfactionDegree":"中","season":"summer"},{"fastChargeTime":63.11,"satisfactionDegree":"低","season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","fastChargeDuration":54.47,"satisfactionDegree":"低","vehFac":"吉利汽车","unit":"min","monthType":[{"fastChargeTime":97.5,"satisfactionDegree":"低","month":"01"},{"fastChargeTime":41,"satisfactionDegree":"中","month":"02"},{"fastChargeTime":92.67,"satisfactionDegree":"低","month":"03"},{"fastChargeTime":0,"satisfactionDegree":"低","month":"04"},{"fastChargeTime":45.67,"satisfactionDegree":"低","month":"05"},{"fastChargeTime":44.5,"satisfactionDegree":"中","month":"06"},{"fastChargeTime":45.14,"satisfactionDegree":"低","month":"07"},{"fastChargeTime":44.34,"satisfactionDegree":"中","month":"08"},{"fastChargeTime":44.73,"satisfactionDegree":"中","month":"09"},{"fastChargeTime":45.18,"satisfactionDegree":"低","month":"10"},{"fastChargeTime":47.66,"satisfactionDegree":"低","month":"11"},{"fastChargeTime":50.83,"satisfactionDegree":"低","month":"12"}],"seasonType":[{"fastChargeTime":45.86,"satisfactionDegree":"低","season":"autumn"},{"fastChargeTime":69.17,"satisfactionDegree":"低","season":"spring"},{"fastChargeTime":44.66,"satisfactionDegree":"中","season":"summer"},{"fastChargeTime":63.11,"satisfactionDegree":"低","season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
  <testcase name="ApiTestCode" time="0.090" classname="com.bitnei.apitest.testcases.saas.ApiTest">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&quot;data&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:289.59,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:206,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:234.76,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:285.52,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:298.19,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:323.13,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:321.67,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:316.4,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:320,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:324.62,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:315.65,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:283.3,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:245.88,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:307.86,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:302.28,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:319.36,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:228.88,&quot;season&quot;:&quot;winter&quot;}]}},&quot;vehModel&quot;:{&quot;actualKey&quot;:&quot;不存在此vehModel&quot;,&quot;expectedKey&quot;:&quot;vehModel&quot;},&quot;driverRange&quot;:{&quot;actualKey&quot;:&quot;不存在此driverRange&quot;,&quot;expectedKey&quot;:&quot;driverRange&quot;},&quot;standardDriverMileage&quot;:{&quot;actualKey&quot;:&quot;不存在此standardDriverMileage&quot;,&quot;expectedKey&quot;:&quot;standardDriverMileage&quot;},&quot;vehFac&quot;:{&quot;actualKey&quot;:&quot;不存在此vehFac&quot;,&quot;expectedKey&quot;:&quot;vehFac&quot;},&quot;unit&quot;:{&quot;actualKey&quot;:&quot;不存在此unit&quot;,&quot;expectedKey&quot;:&quot;unit&quot;},&quot;monthType&quot;:{&quot;actualKey&quot;:&quot;不存在此monthType&quot;,&quot;expectedKey&quot;:&quot;monthType&quot;},&quot;seasonType&quot;:{&quot;actualKey&quot;:&quot;不存在此seasonType&quot;,&quot;expectedKey&quot;:&quot;seasonType&quot;},&quot;error&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:289.59,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:206,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:234.76,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:285.52,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:298.19,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:323.13,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:321.67,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:316.4,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:320,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:324.62,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:315.65,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:283.3,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:245.88,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:307.86,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:302.28,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:319.36,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:228.88,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:true,&quot;expectedValue is&quot;:false},&quot;code&quot;:{&quot;actualValue&quot;:null,&quot;expectedValue&quot;:{&quot;vehModel&quot;:&quot;帝豪GSE400&quot;,&quot;driverRange&quot;:289.59,&quot;standardDriverMileage&quot;:353,&quot;vehFac&quot;:&quot;吉利汽车&quot;,&quot;unit&quot;:&quot;km&quot;,&quot;monthType&quot;:[{&quot;driverMileage&quot;:206,&quot;month&quot;:&quot;01&quot;},{&quot;driverMileage&quot;:234.76,&quot;month&quot;:&quot;02&quot;},{&quot;driverMileage&quot;:285.52,&quot;month&quot;:&quot;03&quot;},{&quot;driverMileage&quot;:298.19,&quot;month&quot;:&quot;04&quot;},{&quot;driverMileage&quot;:323.13,&quot;month&quot;:&quot;05&quot;},{&quot;driverMileage&quot;:321.67,&quot;month&quot;:&quot;06&quot;},{&quot;driverMileage&quot;:316.4,&quot;month&quot;:&quot;07&quot;},{&quot;driverMileage&quot;:320,&quot;month&quot;:&quot;08&quot;},{&quot;driverMileage&quot;:324.62,&quot;month&quot;:&quot;09&quot;},{&quot;driverMileage&quot;:315.65,&quot;month&quot;:&quot;10&quot;},{&quot;driverMileage&quot;:283.3,&quot;month&quot;:&quot;11&quot;},{&quot;driverMileage&quot;:245.88,&quot;month&quot;:&quot;12&quot;}],&quot;seasonType&quot;:[{&quot;driverMileage&quot;:307.86,&quot;season&quot;:&quot;autumn&quot;},{&quot;driverMileage&quot;:302.28,&quot;season&quot;:&quot;spring&quot;},{&quot;driverMileage&quot;:319.36,&quot;season&quot;:&quot;summer&quot;},{&quot;driverMileage&quot;:228.88,&quot;season&quot;:&quot;winter&quot;}]},&quot;currentValue is &quot;:&quot;30007&quot;,&quot;expectedValue is&quot;:false,&quot;expectedValue is &quot;:&quot;10000&quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":289.59,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":206,"month":"01"},{"driverMileage":234.76,"month":"02"},{"driverMileage":285.52,"month":"03"},{"driverMileage":298.19,"month":"04"},{"driverMileage":323.13,"month":"05"},{"driverMileage":321.67,"month":"06"},{"driverMileage":316.4,"month":"07"},{"driverMileage":320,"month":"08"},{"driverMileage":324.62,"month":"09"},{"driverMileage":315.65,"month":"10"},{"driverMileage":283.3,"month":"11"},{"driverMileage":245.88,"month":"12"}],"seasonType":[{"driverMileage":307.86,"season":"autumn"},{"driverMileage":302.28,"season":"spring"},{"driverMileage":319.36,"season":"summer"},{"driverMileage":228.88,"season":"winter"}]}},"vehModel":{"actualKey":"不存在此vehModel","expectedKey":"vehModel"},"driverRange":{"actualKey":"不存在此driverRange","expectedKey":"driverRange"},"standardDriverMileage":{"actualKey":"不存在此standardDriverMileage","expectedKey":"standardDriverMileage"},"vehFac":{"actualKey":"不存在此vehFac","expectedKey":"vehFac"},"unit":{"actualKey":"不存在此unit","expectedKey":"unit"},"monthType":{"actualKey":"不存在此monthType","expectedKey":"monthType"},"seasonType":{"actualKey":"不存在此seasonType","expectedKey":"seasonType"},"error":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":289.59,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":206,"month":"01"},{"driverMileage":234.76,"month":"02"},{"driverMileage":285.52,"month":"03"},{"driverMileage":298.19,"month":"04"},{"driverMileage":323.13,"month":"05"},{"driverMileage":321.67,"month":"06"},{"driverMileage":316.4,"month":"07"},{"driverMileage":320,"month":"08"},{"driverMileage":324.62,"month":"09"},{"driverMileage":315.65,"month":"10"},{"driverMileage":283.3,"month":"11"},{"driverMileage":245.88,"month":"12"}],"seasonType":[{"driverMileage":307.86,"season":"autumn"},{"driverMileage":302.28,"season":"spring"},{"driverMileage":319.36,"season":"summer"},{"driverMileage":228.88,"season":"winter"}]},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"vehModel":"帝豪GSE400","driverRange":289.59,"standardDriverMileage":353,"vehFac":"吉利汽车","unit":"km","monthType":[{"driverMileage":206,"month":"01"},{"driverMileage":234.76,"month":"02"},{"driverMileage":285.52,"month":"03"},{"driverMileage":298.19,"month":"04"},{"driverMileage":323.13,"month":"05"},{"driverMileage":321.67,"month":"06"},{"driverMileage":316.4,"month":"07"},{"driverMileage":320,"month":"08"},{"driverMileage":324.62,"month":"09"},{"driverMileage":315.65,"month":"10"},{"driverMileage":283.3,"month":"11"},{"driverMileage":245.88,"month":"12"}],"seasonType":[{"driverMileage":307.86,"season":"autumn"},{"driverMileage":302.28,"season":"spring"},{"driverMileage":319.36,"season":"summer"},{"driverMileage":228.88,"season":"winter"}]},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.ApiTest.ApiTestCode(ApiTest.java:101)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- ApiTestCode -->
</testsuite> <!-- com.bitnei.apitest.testcases.saas.ApiTest -->
