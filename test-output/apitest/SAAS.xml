<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-Q37MKND" ignored="0" name="SAAS" tests="8" failures="8" timestamp="02 六月 2020 08:41:41 GMT" time="22.325" errors="0">
  <testcase name="Insurance" time="0.15" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;data&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:22.0257,&amp;quot;mileage_12&amp;quot;:6303,&amp;quot;mileage_24&amp;quot;:3623,&amp;quot;mileage_36&amp;quot;:0,&amp;quot;avg_run_time_length_monthly&amp;quot;:1.6908846E7,&amp;quot;avg_run_speed&amp;quot;:319.06732,&amp;quot;brake_acc_count_per_100km&amp;quot;:0,&amp;quot;acc_count_per_100km&amp;quot;:0,&amp;quot;speed_range00_rate&amp;quot;:0.24379587,&amp;quot;speed_range20_rate&amp;quot;:0.18437609,&amp;quot;speed_range40_rate&amp;quot;:0.19608529,&amp;quot;speed_range60_rate&amp;quot;:0.06675988,&amp;quot;speed_range80_rate&amp;quot;:0.0061167423,&amp;quot;speed_range100_rate&amp;quot;:8.7382033E-4,&amp;quot;speed_range120_rate&amp;quot;:0,&amp;quot;speed_range140_rate&amp;quot;:0,&amp;quot;fatigue_driving_rate&amp;quot;:0,&amp;quot;avg_run_days_monthly&amp;quot;:7.769231,&amp;quot;avg_run_count_monthly&amp;quot;:12.076923,&amp;quot;avg_fast_charge_count_monthly&amp;quot;:0,&amp;quot;avg_slow_charge_count_monthly&amp;quot;:1.9090909}},&amp;quot;risk_score&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此risk_score&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;risk_score&amp;quot;},&amp;quot;mileage_12&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_12&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_12&amp;quot;},&amp;quot;mileage_24&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_24&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_24&amp;quot;},&amp;quot;mileage_36&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_36&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_36&amp;quot;},&amp;quot;avg_run_time_length_monthly&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_run_time_length_monthly&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_run_time_length_monthly&amp;quot;},&amp;quot;avg_run_speed&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_run_speed&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_run_speed&amp;quot;},&amp;quot;brake_acc_count_per_100km&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此brake_acc_count_per_100km&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;brake_acc_count_per_100km&amp;quot;},&amp;quot;acc_count_per_100km&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此acc_count_per_100km&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;acc_count_per_100km&amp;quot;},&amp;quot;speed_range00_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range00_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range00_rate&amp;quot;},&amp;quot;speed_range20_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range20_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range20_rate&amp;quot;},&amp;quot;speed_range40_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range40_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range40_rate&amp;quot;},&amp;quot;speed_range60_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range60_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range60_rate&amp;quot;},&amp;quot;speed_range80_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range80_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range80_rate&amp;quot;},&amp;quot;speed_range100_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range100_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range100_rate&amp;quot;},&amp;quot;speed_range120_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range120_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range120_rate&amp;quot;},&amp;quot;speed_range140_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此speed_range140_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;speed_range140_rate&amp;quot;},&amp;quot;fatigue_driving_rate&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此fatigue_driving_rate&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;fatigue_driving_rate&amp;quot;},&amp;quot;avg_run_days_monthly&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_run_days_monthly&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_run_days_monthly&amp;quot;},&amp;quot;avg_run_count_monthly&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_run_count_monthly&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_run_count_monthly&amp;quot;},&amp;quot;avg_fast_charge_count_monthly&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_fast_charge_count_monthly&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_fast_charge_count_monthly&amp;quot;},&amp;quot;avg_slow_charge_count_monthly&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此avg_slow_charge_count_monthly&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;avg_slow_charge_count_monthly&amp;quot;},&amp;quot;error&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:22.0257,&amp;quot;mileage_12&amp;quot;:6303,&amp;quot;mileage_24&amp;quot;:3623,&amp;quot;mileage_36&amp;quot;:0,&amp;quot;avg_run_time_length_monthly&amp;quot;:1.6908846E7,&amp;quot;avg_run_speed&amp;quot;:319.06732,&amp;quot;brake_acc_count_per_100km&amp;quot;:0,&amp;quot;acc_count_per_100km&amp;quot;:0,&amp;quot;speed_range00_rate&amp;quot;:0.24379587,&amp;quot;speed_range20_rate&amp;quot;:0.18437609,&amp;quot;speed_range40_rate&amp;quot;:0.19608529,&amp;quot;speed_range60_rate&amp;quot;:0.06675988,&amp;quot;speed_range80_rate&amp;quot;:0.0061167423,&amp;quot;speed_range100_rate&amp;quot;:8.7382033E-4,&amp;quot;speed_range120_rate&amp;quot;:0,&amp;quot;speed_range140_rate&amp;quot;:0,&amp;quot;fatigue_driving_rate&amp;quot;:0,&amp;quot;avg_run_days_monthly&amp;quot;:7.769231,&amp;quot;avg_run_count_monthly&amp;quot;:12.076923,&amp;quot;avg_fast_charge_count_monthly&amp;quot;:0,&amp;quot;avg_slow_charge_count_monthly&amp;quot;:1.9090909},&amp;quot;currentValue is &amp;quot;:true,&amp;quot;expectedValue is&amp;quot;:false},&amp;quot;code&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:22.0257,&amp;quot;mileage_12&amp;quot;:6303,&amp;quot;mileage_24&amp;quot;:3623,&amp;quot;mileage_36&amp;quot;:0,&amp;quot;avg_run_time_length_monthly&amp;quot;:1.6908846E7,&amp;quot;avg_run_speed&amp;quot;:319.06732,&amp;quot;brake_acc_count_per_100km&amp;quot;:0,&amp;quot;acc_count_per_100km&amp;quot;:0,&amp;quot;speed_range00_rate&amp;quot;:0.24379587,&amp;quot;speed_range20_rate&amp;quot;:0.18437609,&amp;quot;speed_range40_rate&amp;quot;:0.19608529,&amp;quot;speed_range60_rate&amp;quot;:0.06675988,&amp;quot;speed_range80_rate&amp;quot;:0.0061167423,&amp;quot;speed_range100_rate&amp;quot;:8.7382033E-4,&amp;quot;speed_range120_rate&amp;quot;:0,&amp;quot;speed_range140_rate&amp;quot;:0,&amp;quot;fatigue_driving_rate&amp;quot;:0,&amp;quot;avg_run_days_monthly&amp;quot;:7.769231,&amp;quot;avg_run_count_monthly&amp;quot;:12.076923,&amp;quot;avg_fast_charge_count_monthly&amp;quot;:0,&amp;quot;avg_slow_charge_count_monthly&amp;quot;:1.9090909},&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:false,&amp;quot;expectedValue is &amp;quot;:&amp;quot;10000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"risk_score":22.0257,"mileage_12":6303,"mileage_24":3623,"mileage_36":0,"avg_run_time_length_monthly":1.6908846E7,"avg_run_speed":319.06732,"brake_acc_count_per_100km":0,"acc_count_per_100km":0,"speed_range00_rate":0.24379587,"speed_range20_rate":0.18437609,"speed_range40_rate":0.19608529,"speed_range60_rate":0.06675988,"speed_range80_rate":0.0061167423,"speed_range100_rate":8.7382033E-4,"speed_range120_rate":0,"speed_range140_rate":0,"fatigue_driving_rate":0,"avg_run_days_monthly":7.769231,"avg_run_count_monthly":12.076923,"avg_fast_charge_count_monthly":0,"avg_slow_charge_count_monthly":1.9090909}},"risk_score":{"actualKey":"不存在此risk_score","expectedKey":"risk_score"},"mileage_12":{"actualKey":"不存在此mileage_12","expectedKey":"mileage_12"},"mileage_24":{"actualKey":"不存在此mileage_24","expectedKey":"mileage_24"},"mileage_36":{"actualKey":"不存在此mileage_36","expectedKey":"mileage_36"},"avg_run_time_length_monthly":{"actualKey":"不存在此avg_run_time_length_monthly","expectedKey":"avg_run_time_length_monthly"},"avg_run_speed":{"actualKey":"不存在此avg_run_speed","expectedKey":"avg_run_speed"},"brake_acc_count_per_100km":{"actualKey":"不存在此brake_acc_count_per_100km","expectedKey":"brake_acc_count_per_100km"},"acc_count_per_100km":{"actualKey":"不存在此acc_count_per_100km","expectedKey":"acc_count_per_100km"},"speed_range00_rate":{"actualKey":"不存在此speed_range00_rate","expectedKey":"speed_range00_rate"},"speed_range20_rate":{"actualKey":"不存在此speed_range20_rate","expectedKey":"speed_range20_rate"},"speed_range40_rate":{"actualKey":"不存在此speed_range40_rate","expectedKey":"speed_range40_rate"},"speed_range60_rate":{"actualKey":"不存在此speed_range60_rate","expectedKey":"speed_range60_rate"},"speed_range80_rate":{"actualKey":"不存在此speed_range80_rate","expectedKey":"speed_range80_rate"},"speed_range100_rate":{"actualKey":"不存在此speed_range100_rate","expectedKey":"speed_range100_rate"},"speed_range120_rate":{"actualKey":"不存在此speed_range120_rate","expectedKey":"speed_range120_rate"},"speed_range140_rate":{"actualKey":"不存在此speed_range140_rate","expectedKey":"speed_range140_rate"},"fatigue_driving_rate":{"actualKey":"不存在此fatigue_driving_rate","expectedKey":"fatigue_driving_rate"},"avg_run_days_monthly":{"actualKey":"不存在此avg_run_days_monthly","expectedKey":"avg_run_days_monthly"},"avg_run_count_monthly":{"actualKey":"不存在此avg_run_count_monthly","expectedKey":"avg_run_count_monthly"},"avg_fast_charge_count_monthly":{"actualKey":"不存在此avg_fast_charge_count_monthly","expectedKey":"avg_fast_charge_count_monthly"},"avg_slow_charge_count_monthly":{"actualKey":"不存在此avg_slow_charge_count_monthly","expectedKey":"avg_slow_charge_count_monthly"},"error":{"actualValue":null,"expectedValue":{"risk_score":22.0257,"mileage_12":6303,"mileage_24":3623,"mileage_36":0,"avg_run_time_length_monthly":1.6908846E7,"avg_run_speed":319.06732,"brake_acc_count_per_100km":0,"acc_count_per_100km":0,"speed_range00_rate":0.24379587,"speed_range20_rate":0.18437609,"speed_range40_rate":0.19608529,"speed_range60_rate":0.06675988,"speed_range80_rate":0.0061167423,"speed_range100_rate":8.7382033E-4,"speed_range120_rate":0,"speed_range140_rate":0,"fatigue_driving_rate":0,"avg_run_days_monthly":7.769231,"avg_run_count_monthly":12.076923,"avg_fast_charge_count_monthly":0,"avg_slow_charge_count_monthly":1.9090909},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"risk_score":22.0257,"mileage_12":6303,"mileage_24":3623,"mileage_36":0,"avg_run_time_length_monthly":1.6908846E7,"avg_run_speed":319.06732,"brake_acc_count_per_100km":0,"acc_count_per_100km":0,"speed_range00_rate":0.24379587,"speed_range20_rate":0.18437609,"speed_range40_rate":0.19608529,"speed_range60_rate":0.06675988,"speed_range80_rate":0.0061167423,"speed_range100_rate":8.7382033E-4,"speed_range120_rate":0,"speed_range140_rate":0,"fatigue_driving_rate":0,"avg_run_days_monthly":7.769231,"avg_run_count_monthly":12.076923,"avg_fast_charge_count_monthly":0,"avg_slow_charge_count_monthly":1.9090909},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.115" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;status&amp;quot;:{&amp;quot;currentValue is &amp;quot;:200,&amp;quot;expectedValue is&amp;quot;:406},&amp;quot;errorMsg&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;接口 /external-api/vrm/insurance/lable 不存在&amp;quot;,&amp;quot;expectedValue is&amp;quot;:406,&amp;quot;expectedValue is &amp;quot;:&amp;quot;确保VIN是否已加密！&amp;quot;},&amp;quot;code&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:406,&amp;quot;expectedValue is &amp;quot;:&amp;quot;40000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":406},"errorMsg":{"currentValue is ":"接口 /external-api/vrm/insurance/lable 不存在","expectedValue is":406,"expectedValue is ":"确保VIN是否已加密！"},"code":{"currentValue is ":"30007","expectedValue is":406,"expectedValue is ":"40000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.153" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;status&amp;quot;:{&amp;quot;currentValue is &amp;quot;:200,&amp;quot;expectedValue is&amp;quot;:406},&amp;quot;errorMsg&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;接口 /external-api/vrm/insurance/lable 不存在&amp;quot;,&amp;quot;expectedValue is&amp;quot;:406,&amp;quot;expectedValue is &amp;quot;:&amp;quot;验签失败！&amp;quot;},&amp;quot;code&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:406,&amp;quot;expectedValue is &amp;quot;:&amp;quot;40000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"status":{"currentValue is ":200,"expectedValue is":406},"errorMsg":{"currentValue is ":"接口 /external-api/vrm/insurance/lable 不存在","expectedValue is":406,"expectedValue is ":"验签失败！"},"code":{"currentValue is ":"30007","expectedValue is":406,"expectedValue is ":"40000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.116" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;error&amp;quot;:{&amp;quot;currentValue is &amp;quot;:true,&amp;quot;expectedValue is&amp;quot;:false},&amp;quot;code&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:false,&amp;quot;expectedValue is &amp;quot;:&amp;quot;35000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.149" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;data&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0}},&amp;quot;risk_score&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此risk_score&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;risk_score&amp;quot;},&amp;quot;mileage_12&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_12&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_12&amp;quot;},&amp;quot;mileage_24&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_24&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_24&amp;quot;},&amp;quot;mileage_36&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_36&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_36&amp;quot;},&amp;quot;error&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0},&amp;quot;currentValue is &amp;quot;:true,&amp;quot;expectedValue is&amp;quot;:false},&amp;quot;code&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0},&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:false,&amp;quot;expectedValue is &amp;quot;:&amp;quot;10000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0}},"risk_score":{"actualKey":"不存在此risk_score","expectedKey":"risk_score"},"mileage_12":{"actualKey":"不存在此mileage_12","expectedKey":"mileage_12"},"mileage_24":{"actualKey":"不存在此mileage_24","expectedKey":"mileage_24"},"mileage_36":{"actualKey":"不存在此mileage_36","expectedKey":"mileage_36"},"error":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.174" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;data&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0}},&amp;quot;risk_score&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此risk_score&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;risk_score&amp;quot;},&amp;quot;mileage_12&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_12&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_12&amp;quot;},&amp;quot;mileage_24&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_24&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_24&amp;quot;},&amp;quot;mileage_36&amp;quot;:{&amp;quot;actualKey&amp;quot;:&amp;quot;不存在此mileage_36&amp;quot;,&amp;quot;expectedKey&amp;quot;:&amp;quot;mileage_36&amp;quot;},&amp;quot;error&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0},&amp;quot;currentValue is &amp;quot;:true,&amp;quot;expectedValue is&amp;quot;:false},&amp;quot;code&amp;quot;:{&amp;quot;actualValue&amp;quot;:null,&amp;quot;expectedValue&amp;quot;:{&amp;quot;risk_score&amp;quot;:24.419712,&amp;quot;mileage_12&amp;quot;:3,&amp;quot;mileage_24&amp;quot;:1,&amp;quot;mileage_36&amp;quot;:0},&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:false,&amp;quot;expectedValue is &amp;quot;:&amp;quot;10000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"data":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0}},"risk_score":{"actualKey":"不存在此risk_score","expectedKey":"risk_score"},"mileage_12":{"actualKey":"不存在此mileage_12","expectedKey":"mileage_12"},"mileage_24":{"actualKey":"不存在此mileage_24","expectedKey":"mileage_24"},"mileage_36":{"actualKey":"不存在此mileage_36","expectedKey":"mileage_36"},"error":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0},"currentValue is ":true,"expectedValue is":false},"code":{"actualValue":null,"expectedValue":{"risk_score":24.419712,"mileage_12":3,"mileage_24":1,"mileage_36":0},"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"10000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.139" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;errorMsg&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;接口 /external-api/vrm/genilex/insurance/lable 不存在&amp;quot;,&amp;quot;expectedValue is &amp;quot;:&amp;quot;车架号与车牌号至少传一个&amp;quot;},&amp;quot;code&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is &amp;quot;:&amp;quot;40000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"errorMsg":{"currentValue is ":"接口 /external-api/vrm/genilex/insurance/lable 不存在","expectedValue is ":"车架号与车牌号至少传一个"},"code":{"currentValue is ":"30007","expectedValue is ":"40000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
  <testcase name="Insurance" time="0.107" classname="com.bitnei.apitest.testcases.saas.GetInsurance">
    <failure type="java.lang.AssertionError" message="expected [{}] but found [{&amp;quot;error&amp;quot;:{&amp;quot;currentValue is &amp;quot;:true,&amp;quot;expectedValue is&amp;quot;:false},&amp;quot;code&amp;quot;:{&amp;quot;currentValue is &amp;quot;:&amp;quot;30007&amp;quot;,&amp;quot;expectedValue is&amp;quot;:false,&amp;quot;expectedValue is &amp;quot;:&amp;quot;35000&amp;quot;}}]">
      <![CDATA[java.lang.AssertionError: expected [{}] but found [{"error":{"currentValue is ":true,"expectedValue is":false},"code":{"currentValue is ":"30007","expectedValue is":false,"expectedValue is ":"35000"}}]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.bitnei.apitest.testcases.saas.GetInsurance.Insurance(GetInsurance.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Insurance -->
</testsuite> <!-- SAAS -->
